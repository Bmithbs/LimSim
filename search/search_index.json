{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Long-term Macro-micro Interactive Simulation","text":"<p>Welcome to LimSim.</p>"},{"location":"AnalysisAndEvaluation/Database/","title":"Database","text":"<p>markdown LimSim stores all data in the database during simulation to facilitate analysis and evaluation of simulation. LimSim uses a lightweight open-source database SQLite for data storage, which makes it easy to view and migrate data. The storage of simulation data in LimSim is mainly divided into three parts: road network data, vehicle data, and simulation data, which are introduced below.</p>"},{"location":"AnalysisAndEvaluation/Database/#road-network-data","title":"Road Network Data","text":"<p>Based on the SUMO road network, LimSim models multiple types of road network structures. The following tables record road network data. When replaying data, the road network is reconstructed based on the following data.</p>"},{"location":"AnalysisAndEvaluation/Database/#edgeinfo","title":"edgeINFO","text":"Field Data Type Description <code>id</code> TEXT PRIMARY KEY ID of edge <code>laneNumber</code> INT Number of lanes on edge <code>from_junction</code> TEXT ID of starting junction of edge <code>to_junction</code> TEXT ID of ending junction of edge"},{"location":"AnalysisAndEvaluation/Database/#laneinfo","title":"laneINFO","text":"Field Data Type Description <code>id</code> TEXT PRIMARY KEY ID of lane <code>rawShape</code> TEXT Geometric structure of lane centerline <code>width</code> REAL Width of lane <code>maxSpeed</code> REAL Maximum speed of lane <code>edgeID</code> TEXT ID of edge to which lane belongs <code>length</code> REAL Length of lane <p>The <code>rawShape</code> of a lane is stored as a string in the database, separated by spaces and commas, respectively. For example, the following <code>rawShape</code> records three points, which are <code>(10.2, 100.3)</code>, <code>(14.3, 15.4)</code>, and <code>(13.4, 12.6)</code>.</p> <pre><code>10.2,100.3 14.3,15.4 13.4,12.6\n</code></pre>"},{"location":"AnalysisAndEvaluation/Database/#junctionlaneinfo","title":"junctionLaneINFO","text":"<p>In the SUMO road network, there are two types of lanes, one is generated by the user with a specific name. The other is a lane automatically generated by SUMO to connect the first type of lane. These lanes have the property of <code>internal</code>. Here for convenience, we define the second type of lane as the junctionLane. The junctionLane always connects two lanes, and some junctionLanes also have the property of traffic signals.</p> Field Data Type Description <code>id</code> TEXT PRIMARY KEY ID of junctionLane <code>width</code> REAL Width of junctionLane <code>maxSpeed</code> REAL Maximum speed of junctionLane <code>length</code> REAL Length of junctionLane <code>tlLogicID</code> TEXT ID of traffic signal control logic to which junctionLane belongs <code>tlIndex</code> INT Number in the traffic signal control logic to which the junctionLane belongs"},{"location":"AnalysisAndEvaluation/Database/#connectioninfo","title":"connectionINFO","text":"<p>As mentioned earlier, two lanes are connected by a junctionLane, and the connection records this connection relationship.</p> Field Data Type Description <code>fromLane</code> TEXT ID of starting lane <code>toLane</code> TEXT ID of ending lane <code>direction</code> TEXT Direction, refer to XXXX <code>via</code> TEXT ID of junctionLane that connects the two lanes together"},{"location":"AnalysisAndEvaluation/Database/#junctioninfo","title":"junctionINFO","text":"Field Data Type Description <code>id</code> TEXT PRIMARY KEY ID of junction <code>rawShape</code> TEXT Geometric structure of junction <p>Like the <code>rawShape</code> of a lane, the <code>rawShape</code> of a junction is also recorded as a string in the database, separated by spaces and commas, respectively. But the <code>rawShape</code> of the junction records the outer contour of the junction.</p>"},{"location":"AnalysisAndEvaluation/Database/#tllogicinfo","title":"tlLogicINFO","text":"Field Data Type Description <code>id</code> TEXT PRIMARY KEY ID of traffic signal control logic, also corresponding to junction ID <code>tlType</code> TEXT Type of traffic signal control logic, divided into\u00a0<code>static</code>,\u00a0<code>actuated</code>, and\u00a0<code>delay_based</code> <code>preDefPhases</code> TEXT Phases and order of traffic signal control logic, refer to XXX"},{"location":"AnalysisAndEvaluation/Database/#trafficlightstates","title":"trafficLightStates","text":"Field Data Type Description <code>frame</code> INT Current simulation time <code>id</code> TEXT ID of traffic signal control logic <code>currPhase</code> TEXT Current phase <code>nextPhase</code> TEXT Next phase <code>switchTime</code> REAL Remaining duration of current phase"},{"location":"AnalysisAndEvaluation/Database/#vehicle-information","title":"Vehicle Information","text":"<p>Vehicle information is divided into two types: inherent attributes of vehicles and real-time status during simulation.</p>"},{"location":"AnalysisAndEvaluation/Database/#vehicleinfo","title":"vehicleINFO","text":"Field Data Type Description <code>vid</code> INT ID of vehicle <code>length</code> REAL Length of vehicle <code>width</code> REAL Width of vehicle <code>maxAccel</code> REAL Maximum acceleration of vehicle <code>maxDecel</code> REAL Maximum deceleration rate of vehicle <code>maxSpeed</code> REAL Maximum speed of vehicle <code>vTypeID</code> TEXT ID of vehicle model <code>routes</code> TEXT Route information for the vehicle"},{"location":"AnalysisAndEvaluation/Database/#frameinfo","title":"frameINFO","text":"Field Data Type Description <code>frame</code> INT Current simulation time <code>vid</code> INT ID of vehicle <code>vtag</code> TEXT Role of vehicle, can be\u00a0<code>ego</code>,\u00a0<code>AoI</code>, or\u00a0<code>outOfAoI</code> <code>x</code> REAL X position of vehicle at this moment <code>y</code> REAL Y position of vehicle at this moment <code>yaw</code> REAL Yaw angle of vehicle at this moment, with x-axis as a starting point and counterclockwise as a positive direction <code>speed</code> REAL Speed of vehicle at this moment <code>accel</code> REAL Acceleration of vehicle at this moment <code>laneID</code> TEXT ID of lane in which the vehicle is located <code>lanePos</code> REAL Distance from the starting point of the lane to the vehicle at this moment <code>routeIdx</code> INT The number of the current section of the <p>Values processed</p> <p>The above indicators have been normalized and are not real values. For more information, please refer to Scenario Evaluation.</p> <ol> <li> <p>TTC(Time To Collision): refers to how long it will take for two vehicles to collide while they maintain their current speed.\u00a0\u21a9</p> </li> </ol>"},{"location":"AnalysisAndEvaluation/Evaluation/","title":"Evaluation","text":""},{"location":"AnalysisAndEvaluation/Evaluation/#evaluation-module","title":"Evaluation Module","text":"<p>The Evaluation module is used for real-time evaluation of the scenarios in which vehicles are located. It includes five evaluation dimensions, and the evaluation results can be used for decision-making or scenario extraction, providing data for subsequent testing.</p> <p>Now let's introduce these five dimensions one by one.</p>"},{"location":"AnalysisAndEvaluation/Evaluation/#consumption","title":"Consumption","text":"<p>We apply the following formula to calculate the energy consumption of a vehicle:</p> \\[ P = (v * a)^2 + v^3 \\] <p>Here, \\(v\\) and \\(a\\) represent the vehicle's speed and acceleration, respectively.</p> <p>Under free driving (cruising) conditions, the vehicle's speed is relatively high, and the acceleration is relatively small, resulting in higher overall energy consumption, with speed being the dominant factor. In cases where the vehicle needs to brake urgently, the speed decreases sharply, and the acceleration is relatively high, resulting in lower overall energy consumption but with discontinuous changes.</p>"},{"location":"AnalysisAndEvaluation/Evaluation/#collision","title":"Collision","text":"<p>We use the two-dimensional Time-to-Collision (TTC) to calculate possible collisions. The two-dimensional TTC is defined as the time it takes for two vehicles to collide if they continue to travel in their current speed and direction. TTC indicates potential collision risks and can be used to evaluate the safety of trajectory planning algorithms.</p> <p>Here, we have referred to the implementation of nuplan and simplified it according to our data format.</p>"},{"location":"AnalysisAndEvaluation/Evaluation/#orientation","title":"Orientation","text":"<p>We use the deviation of the vehicle from the centerline of the lane (the angle between the velocity direction and the lane centerline) as the orientation.</p> \\[ (\\sin(\\theta_{ego}) - \\sin(\\theta_{ref}))^2 \\] <p>Here, \\(\\theta_{ego}\\) and \\(\\theta_{ref}\\) represent the angles of the ego vehicle and the projection point of the ego vehicle on the reference line (in the world coordinate system). There are three points to note here: 1. For the sake of presentation, we use \\(\\sin\\) for normalization. 2. The meaning of the deviation angle is not significant within the junction, so \\(\\theta_{ref}\\) here actually refers to the \"nearest point on the <code>NormalLane</code> in the historical trajectory\". 3. Also for the sake of presentation, we have added a <code>delay</code> term to make the turning display smoother.</p> <p>Orientation can reflect the turning behavior of the vehicle, especially in scenarios that require unprotected left turns, which can be used to filter out some scenarios for testing based on the Orientation results.</p>"},{"location":"AnalysisAndEvaluation/Evaluation/#discomfort","title":"Discomfort","text":"<p>We use the square of jerk to represent discomfort.</p> \\[ \\left(\\frac{da}{dt}\\right)^2 \\] <p>Here, \\(a\\) represents the acceleration. Jerk can show the impact of sudden braking and sudden acceleration on passengers during vehicle motion.</p>"},{"location":"AnalysisAndEvaluation/Evaluation/#offset","title":"Offset","text":"<p>We use the square of the lateral coordinate \\(d\\) of the vehicle from the centerline of the lane (within the junction, this dimension is not calculated) as the offset.</p> \\[ d^2 \\] <p>Here, \\(d\\) represents the lateral coordinate of the vehicle in the Frenet coordinate system.</p> <p>Offset can be used to detect lane-changing behavior of vehicles. Since LimSim's default planner is based on the Frenet coordinate system, this dimension can be conveniently calculated.</p>"},{"location":"AnalysisAndEvaluation/Evaluation/#visualization","title":"Visualization","text":"<p>We use radar charts (also known as star charts) to visualize the results of the five evaluation dimensions. To ensure consistency in the visualization, we apply appropriate transformations to the results.</p>"},{"location":"AnalysisAndEvaluation/Evaluation/#data-retrieval","title":"Data Retrieval","text":"<p>We store the real-time evaluation results in the database for scenario extraction and analysis. We can use the following code to convert the evaluation results into a <code>DataFrame</code>:</p> <pre><code>from utils.load_data import load_data_from_database\nevaluation_df = load_data_from_data_base(path_to_data_base, 'evaluation')\n</code></pre>"},{"location":"DecisionAndPlanning/Overview/","title":"Overview","text":"<p>In LimSim, the <code>TrafficManager</code> class is used for unified management, mainly responsible for the \"prediction-decision-planning\" (PDP) process of vehicles within the AOI range, and ultimately generates a reasonable, safe, and kinematic-constraint-compliant trajectory for each vehicle.</p> <p>When using it, we need to first initialize the <code>TrafficManager</code> class, and the required parameters for initialization are as follows:</p> Parameter Name Required/Optional Description <code>model</code> Required The simulation model containing Sumo, which should be either\u00a0<code>Model</code>\u00a0or\u00a0<code>ReplayModel</code>\u00a0class. <code>predictor</code> Optional The predictor of the vehicle, which should be a subclass of\u00a0<code>AbstractPredictor</code>. <code>ego_decision</code> Optional The decision maker of the ego vehicle, which should be a subclass of\u00a0<code>AbstractEgoDecisionMaker</code>. <code>ego_planner</code> Optional The planner of the ego vehicle, which should be a subclass of\u00a0<code>AbstractEgoPlanner</code>. <code>multi_decision</code> Optional The joint decision maker for multiple vehicles, which should be a subclass of\u00a0<code>AbstractMultiDecisionMaker</code>. <code>multi_veh_planner</code> Optional The joint planner for multiple vehicles, which should be a subclass of\u00a0<code>AbstractMultiPlanner</code>. <code>config_file_path</code> Optional The configuration file path, which is responsible for storing some important configurable parameters in the PDP process. <p>LimSim has already implemented the method for the entire PDP process in advance, which means that users do not need to fill in any algorithms to run LimSim normally.</p> <p>At the same time, LimSim also supports users to replace parts or all of the algorithms in the PDP process, only need to inherit the given base class and fill in the interface, so that LimSim can have a brand new performance.</p>"},{"location":"GettingStarted/installDeploy/","title":"Installation & Deployment","text":"<p>LimSim is a microsimulation software designed for testing decision-planning algorithms. It allows for long-duration simulations that combine macroscopic and microscopic aspects.</p>"},{"location":"GettingStarted/installDeploy/#installation-and-deployment","title":"Installation and Deployment","text":"<p>LimSim is primarily written in Python and does not require compilation. You can directly run the source code. However, before running, ensure you have the following development environment:</p> <ul> <li>3.9.0 &lt;= Python &lt;= 3.11.0</li> <li>SUMO &gt;= 1.15.0 (Recommended version: 1.15.0)</li> </ul> <p>After configuring the runtime environment, download the LimSim source code to your local machine:</p> <pre><code>git clone https://github.com/PJLab-ADG/LimSim.git\n</code></pre> <p>Finally, you need to install the required Python extensions:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>Now, the local installation and deployment of LimSim are complete.</p>"},{"location":"GettingStarted/installDeploy/#simulation-examples","title":"Simulation Examples","text":"<p>In the root directory, there are several simulation examples that demonstrate LimSim's functionalities. Please visit the following links to learn more details about each feature:</p> <ul> <li>Real-time Simulation</li> <li>Replay and Interactive Replay</li> <li>Other Features</li> </ul>"},{"location":"GettingStarted/otherFunction/","title":"Other Functions","text":"<p>LimSim also provides some additional features to accommodate different task requirements. Details are as follows:</p>"},{"location":"GettingStarted/otherFunction/#fixed-scene-simulation","title":"Fixed Scene Simulation","text":"<p>In addition to long-duration simulation tests following the Ego vehicle, LimSim offers a fixed-view simulation mode. In this mode, the Area of Interest (AoI) does not follow any specific vehicle but remains fixed at a specified location. Vehicles entering the AoI will still be under the control of the decision-planning algorithm. The method for invoking this mode is similar to real-time simulation. To view an example of fixed scene simulation, run <code>FixedSimExample.py</code>. This mode also supports replay and interactive replay functionalities. To view related examples, run <code>FixedSimReplayExample.py</code> and <code>FixedSimInterReplayExample.py</code>. Further details are not elaborated here.</p>"},{"location":"GettingStarted/otherFunction/#keyboard-controlled-decision-making","title":"Keyboard-Controlled Decision Making","text":"<p>LimSim's decision-planning algorithm provides keyboard-controlled functionality. During the execution of the decision-planning algorithm, pressing the <code>&lt;-</code> key on the keyboard will signal the Ego vehicle to make a left lane change decision. If the environment allows, the vehicle will change lanes to the left. Similarly, pressing the <code>-&gt;</code> key will signal the Ego vehicle to make a right lane change decision.</p>"},{"location":"GettingStarted/otherFunction/#simulation-report","title":"Simulation Report","text":"<p>For the database generated by the simulation, LimSim provides an overall analysis and report. Running the following command will generate the report file <code>report/report.md</code>.</p> <pre><code>python utils/report.py egoTrackingTest.db\n</code></pre> <p>The report file is mainly an overall evaluation of the simulation results, such as drawing speed distribution curves and displaying the number of dangerous scenarios.</p>"},{"location":"GettingStarted/otherFunction/#limsim-sumo-carla-co-simulation","title":"LimSim, SUMO, CARLA Co-Simulation","text":"<p>CARLA is an open-source autonomous driving simulator with multiple functions including perception, positioning, etc., which can be used to help train various modules of autonomous driving. The SUMO co-simulation function provided by CARLA official allows users to use SUMO to manage the background traffic flow of the simulation, making it possible for LimSim, SUMO, and CARLA to co-simulate.</p> <p>Co-simulation is mainly achieved through SUMO's Parallel simulation function. After this function is turned on, the main program can simulate as a Server, while the subprogram can receive data as a Client. Therefore, we can run LimSim as the main program and run CARLA's co-simulation as a subprogram.</p>"},{"location":"GettingStarted/realtimeSim/","title":"Real-time Simulation","text":"<p>Real-time simulation following the Ego vehicle is the fundamental feature of LimSim. To experience it, run the following command:</p> <pre><code>cd LimSim\npython ModelExample.py\n</code></pre>"},{"location":"GettingStarted/realtimeSim/#interface-layout","title":"Interface Layout","text":"<p>If the above command runs successfully, the following interface will be displayed:</p> <p></p> <p>The entire graphical interface is divided into five areas. Area A shows the global view of the road network, with a blue circle representing the Area of Interest (AoI) that follows the movement of the Ego vehicle. It displays the real-time position of the Ego vehicle within the entire road network. Area B shows the follow view of the Ego vehicle, with a blue translucent circle representing the AoI, consistent with the circle in Area A. The purple curve in front of the vehicle represents the trajectory provided by the trajectory planning algorithm. Area C is the status display area of the Ego vehicle, showing its real-time speed and acceleration. Note the X-axis coordinates; the zero point is in the middle of the X-axis, representing the current moment. The left half of the zero point shows historical speed and acceleration, while the right half shows future speed and acceleration (i.e., the speed and acceleration provided by the planning algorithm). Additionally, the speed axis's range depends on the road's speed limit. Area D is the simulation information display area, showing the simulation mode, simulation time, the lane where the Ego vehicle is located, and its position on the lane. Area E is the scene evaluation area, which displays real-time evaluations of the scene. For the specific meanings of each indicator, please refer to  \u573a\u666f\u8bc4\u4ef7\u3002</p> <p>AoI (Area of Interest)</p> <p>The AoI can be considered as the perception area of the Ego vehicle. It is a compromise solution made by LimSim to conduct long-duration simulations. Long-duration simulation involves a large road network and a large number of traffic flows, making it impossible to perform trajectory planning for all vehicles. Therefore, the behavior of vehicles inside the AoI is controlled by the decision-planning model, creating diverse and realistic driving environments around the Ego vehicle. Vehicles outside the AoI are controlled by SUMO, following basic traffic rules.</p>"},{"location":"GettingStarted/realtimeSim/#example-analysis","title":"Example Analysis","text":"<p>This simulation example has the following structure:</p> <pre><code>from simModel.egoTracking.model import Model\nfrom trafficManager.traffic_manager import TrafficManager\nnetFile = 'data/networkFiles/CarlaTown05/Town05.net.xml'\nrouFile = 'data/networkFiles/CarlaTown05/carlavtypes.rou.xml,data/networkFiles/CarlaTown05/Town05.rou.xml'\nif __name__ == '__main__': # (1)\nmodel = Model(\negoID = '61', \nnetFile = netFile, \nrouFile = rouFile, \ndataBase = 'egoTrackingTest.db'\n)\nmodel.start()\nplanner = TrafficManager(model)\nwhile not model.tpEnd:\nmodel.moveStep()\nif model.timeStep % 5 == 0:\nroadgraph, vehicles = model.exportSce()\nif model.tpStart and roadgraph:\ntrajectories = planner.plan(\nmodel.timeStep * 0.1, roadgraph, vehicles)\nmodel.setTrajectories(trajectories)\nelse:\nmodel.ego.exitControlMode() # (2)\nmodel.updateVeh()\nmodel.destroy()\n</code></pre> <ol> <li> <p>  On Windows systems, make sure that all model-related code is within the <code>if __name__ == '__main__':</code> scope; otherwise, the program may crash. The main reason for this is that SUMO uses Python's multiprocessing module, and the methods for creating processes differ between Windows and Linux. For more details, please refer to the contexts-and-start-methods in the Python documentation.</p> </li> <li> <p>If you are no longer controlling the Ego, remember to hand control back to SUMO.</p> </li> </ol> <p>The program's 8th line initializes the model with several main parameters, including <code>egoID</code>, which specifies the ID of the Ego car. In this case, we use SUMO for traffic flow management, and the path information for all vehicles in the network is defined in <code>Town05.rou.xml</code>. Therefore, you can check this file to select a specific car as the Ego car, or you can follow Customizing Vehicles and Routes to generate vehicles with specific paths for simulation and algorithm testing. The <code>netFile</code> and <code>rouFile</code> represent the network and route files used for simulation, and their generation and definition can be found in the SUMO documentation. <code>dataBase</code> is a string specifying the database for recording simulation data.</p> <p>The 15th line initializes the trajectory planning algorithm, which includes trajectory prediction, decision-making, planning, and other modules. Here, the basic version of LimSim (default parameters) is used to control the vehicles in the AoI. You can replace any part of it with your own algorithm. For details on customizing algorithms, please refer to Customizing Algorithms.</p> <p>The main part of the program runs starting from line 17. <code>model.tpEnd</code> is a boolean variable that indicates whether the Ego has reached the destination, i.e., whether the program has ended. <code>model.moveStep()</code> and <code>model.updateVeh()</code> are used for the simulation update process. The former is used to get information about all traffic participants, and the latter is used to update (control) information about all traffic participants. Thus, between the two functions, the trajectory planning algorithm can control the vehicles in the AoI.</p> <p>Since trajectory planning algorithms are typically time-consuming and can provide trajectories for multiple frames in a single planning step, we perform trajectory planning every 5 frames, i.e., <code>if model.timeStep % 5 == 0:</code>. Then, <code>roadgraph, vehicles = model.exportSce()</code> provides information about the current scene around the Ego. <code>roadgraph</code> contains the road network information around the Ego, and <code>vehicles</code> contains information about the surrounding vehicles. The usage of this information can be found in XXXXX. The trajectories returned by the trajectory planning algorithm are then passed back to the simulation through <code>model.setTrajectories()</code>.</p> <p>After running the simulation above, all the data during the simulation will be stored in <code>egoTrackingTest.db</code>, which can be used for replay and analysis. For more information about the database, please refer to Database.</p>"},{"location":"GettingStarted/replayAndIreplay/","title":"Replay & Interactive Replay","text":"<p>Replay is an important feature of simulation programs that can help us deeply analyze hazardous and failure scenarios, enabling us to optimize relevant algorithms. LimSim also provides a replay feature, allowing us to replay data generated from real-time simulations. Building upon this, we offer interactive replay functionality to aid algorithm updates and iterations in critical scenarios.</p>"},{"location":"GettingStarted/replayAndIreplay/#simulation-replay","title":"Simulation Replay","text":"<p>In the root directory, running the following command will invoke LimSim's replay feature:</p> <pre><code>python ReplayExample.py\n</code></pre>"},{"location":"GettingStarted/replayAndIreplay/#interface-layout","title":"Interface Layout","text":"<p>The above command will bring up the interface for replay functionality, as shown in the following image:</p> <p></p> <p>As you can see, compared to real-time simulation, the replay interface has an additional control panel. This panel allows controlling the start, pause, and speed of the replay, facilitating a detailed view of critical simulation aspects. Additionally, in Area B, you can see a pink curve in front of the vehicle. This curve represents the future trajectory of the vehicle recorded in the database, and the vehicle will travel precisely along this pink curve. We refer to it as <code>dbTrajectory</code>. On the other hand, the trajectory provided by the trajectory planning algorithm is represented by the purple curve, known as <code>plannedTrajectory</code>. In Area C, when displaying the vehicle's state at time 0, on the right side, it shows the vehicle's speed and acceleration as recorded in the database.</p>"},{"location":"GettingStarted/replayAndIreplay/#example-analysis","title":"Example Analysis","text":"<p>The example code for simulation replay is straightforward, as shown below:</p> <pre><code>rmodel = ReplayModel(dataBase='egoTrackingTest.db')\nwhile not rmodel.tpEnd:\nrmodel.moveStep() # (1)\nrmodel.gui.destroy()\n</code></pre> <ol> <li> Since there is no need to exchange data with SUMO, only running <code>rmodel.moveStep()</code> is sufficient.</li> </ol>"},{"location":"GettingStarted/replayAndIreplay/#interactive-replay","title":"Interactive replay","text":"<p>The initialization of simulation replay only requires specifying the database, and no interaction with external elements is necessary. Therefore, the code in this example is relatively simple.</p> <p>During the process of autonomous driving test simulation, some dangerous and failure scenarios may occur. These scenarios are important sources of data for upgrading autonomous driving tests. Therefore, retesting on dangerous scenarios is an important function. However, if only Ego is re-controlled and the surrounding vehicles do not respond to Ego's behavior, the test loses its original meaning. Therefore, LimSim provides an interactive replay function that allows users to iterate algorithms in dangerous scenarios.</p> <p></p> <p>Interactive simulation requires planning new trajectories for vehicles in the scene, which also requires handling conflicts between new and old trajectories. As shown in the figure above, there is no conflict when the two cars drive according to the original trajectory, but when ego changes its trajectory, it may collide with other vehicles. At this time, other vehicles need to respond to avoid collisions, that is, to drive along the purple trajectory shown in the figure. However, when ego is far away from this scene, the vehicle that was just controlled faces a problem-whether to return to the original trajectory. If it returns to the original trajectory, it will cause a sudden change in position and may cause new conflicts. If it does not return to the original trajectory, the subsequent trajectory of the vehicle will be gone and can only stop in place or disappear.</p> <p>LimSim solves the above problems by dividing them into three sub-problems: 1. When to plan a new trajectory for a vehicle; 2. How long should the planned trajectory last; 3. How to deal with this vehicle after the trajectory planning is over.</p> <p>Firstly, planning a new trajectory for a vehicle is not as early as possible. If a new trajectory is planned for a vehicle as soon as it is generated, then the degree of data utilization is too low and only the position where the vehicle is generated is used. Therefore, LimSim uses collision detection to determine whether a new trajectory needs to be planned for a vehicle. If the original trajectory of a vehicle conflicts with the new trajectory of another vehicle (the vehicle must be within AoI first), then a new trajectory needs to be replanned for the vehicle, otherwise it will maintain its original trajectory.</p> <p>Secondly, after a vehicle loses control, it either jumps back to its original trajectory or stops in place or disappears. These two forms obviously greatly reduce the coherence and effectiveness of simulation. Therefore, LimSim will judge whether the out-of-control vehicle is still within AoI. If the vehicle is still within AoI, even if there is no longer a conflict, LimSim will continue to plan its trajectory until it leaves AoI. This is mainly to ensure that the scene within AoI is coherent, while vehicles outside AoI have little impact on ego.</p> <p>Thirdly, when a vehicle no longer needs interaction and leaves AoI, the control stage ends. At this time, if you let the vehicle return to its original trajectory, it may collide with other vehicles. Therefore LimSim chooses to directly destroy this car. If there is still remaining trajectory of this car in the dataset, it will regenerate this car at the corresponding time. It should be noted that when LimSim generates a vehicle, it will judge whether this car will conflict with existing cars in the road network. If there is no conflict, generate a car; otherwise delay until next time.</p> <p>Collision Detection</p> <p>General collision detection algorithms use separation axis theorem to determine whether two rectangles intersect. This method can determine whether two cars collide at a certain moment. But in simulation we need to leave enough reaction time for vehicles. For example when car A generates there is a car B driving 3 meters ahead even if these two cars do not collide at this moment there is still a high probability of conflict between them in future seconds. Therefore LimSim will use future trajectories (<code>dbTrajectory</code> or <code>plannedTrajectory</code>) of vehicles for collision detection to avoid potential conflicts.</p>"},{"location":"GettingStarted/replayAndIreplay/#simulation-example","title":"Simulation example","text":"<p>After introducing implementation methods run following command can run interactive simulation example:</p> <pre><code>python InterReplayExample.py\n</code></pre> <p>If above command runs normally same graphic interface will be called out as well. The overall structure of graphic interface consistent with real-time simulation only slightly different in B area. As shown below curve in front of car has pink and purple two kinds corresponding respectively <code>dbTrajectory</code> and <code>plannedTrajectory</code> mentioned earlier. If car drives according to database\u2019s trajectory <code>dbTrajectory</code> displays if controlled by decision planning algorithm <code>plannedTrajectory</code> displays.</p> <p></p> <p>Example code as follows:</p> <pre><code>from trafficManager.traffic_manager import TrafficManager\nfrom simModel.egoTracking import interReplay\nirmodel = interReplay.InterReplayModel(\ndataBase='egoTrackingTest.db', \nstartFrame=4000\n)\nplanner = TrafficManager(irmodel)\nwhile not irmodel.tpEnd:\nirmodel.moveStep()\nif irmodel.timeStep % 5 == 0:\nroadgraph, vehicles = irmodel.exportSce()\nif roadgraph:\ntrajectories = planner.plan(\nirmodel.timeStep * 0.1, \nroadgraph, vehicles\n)\nelse:\ntrajectories = {} # (1)\nirmodel.setTrajectories(trajectories)\nelse:\nirmodel.setTrajectories({})\nirmodel.gui.destroy()\n</code></pre> <ol> <li>  When running interactive replay, <code>irmodel.setTrajectories()</code> function is necessary even if no trajectory planned empty dictionary needs to be passed in.</li> </ol> <p>Example code overall not much different from real-time simulation replace road network file and path file with corresponding database.</p>"},{"location":"zh/AnalysisAndEvaluation/Database/","title":"Database","text":"<p>LimSim \u4f1a\u5728\u4eff\u771f\u65f6\u5c06\u6240\u6709\u6570\u636e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u65b9\u4fbf\u5bf9\u4eff\u771f\u8fdb\u884c\u5206\u6790\u4e0e\u8bc4\u4ef7\u3002LimSim \u4f7f\u7528\u8f7b\u91cf\u7ea7\u5f00\u6e90\u6570\u636e\u5e93 SQLite \u8fdb\u884c\u6570\u636e\u5b58\u50a8\uff0c\u65b9\u4fbf\u6570\u636e\u7684\u67e5\u770b\u4e0e\u8fc1\u79fb\u3002LimSim \u5bf9\u4eff\u771f\u6570\u636e\u7684\u5b58\u50a8\u4e3b\u8981\u5206\u4e09\u4e2a\u90e8\u5206\uff1a\u8def\u7f51\u6570\u636e\u3001\u8f66\u8f86\u6570\u636e\u548c\u4eff\u771f\u6570\u636e\uff0c\u4e0b\u9762\u5206\u522b\u5bf9\u8fd9\u4e09\u4e2a\u90e8\u5206\u8fdb\u884c\u4ecb\u7ecd\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Database/#_1","title":"\u8def\u7f51\u6570\u636e","text":"<p>LimSim \u4ee5 SUMO \u7684\u8def\u7f51\u4e3a\u57fa\u7840\uff0c\u5bf9\u591a\u7c7b\u578b\u7684\u8def\u7f51\u7ed3\u6784\u8fdb\u884c\u5efa\u6a21\u3002\u901a\u8fc7\u4ee5\u4e0b\u51e0\u4e2a\u8868\u683c\u8bb0\u5f55\u8def\u7f51\u7684\u6570\u636e\uff0c\u5728\u6570\u636e\u56de\u653e\u65f6\uff0c\u4ee5\u4e0b\u9762\u7684\u6570\u636e\u4e3a\u4f9d\u636e\u8fdb\u884c\u8def\u7f51\u7684\u91cd\u5efa\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Database/#edgeinfo","title":"edgeINFO","text":"\u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>id</code> TEXT PRIMARY KEY edge \u7684 id <code>laneNumber</code> INT edge \u7684\u8f66\u9053\u6570 <code>from_junction</code> TEXT edge \u7684\u8d77\u70b9\u6240\u5728\u7684 junction <code>to_junction</code> TEXT edge \u7684\u7ec8\u70b9\u6240\u5728\u7684 junction"},{"location":"zh/AnalysisAndEvaluation/Database/#laneinfo","title":"laneINFO","text":"\u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>id</code> TEXT PRIMARY KEY lane \u7684 id <code>rawShape</code> TEXT lane \u7684\u4e2d\u5fc3\u7ebf\u51e0\u4f55\u7ed3\u6784 <code>width</code> REAL lane \u7684\u5bbd\u5ea6 <code>maxSpeed</code> REAL lane \u7684\u6700\u5927\u9650\u901f <code>edgeID</code> TEXT lane \u6240\u5c5e\u7684 edge \u7684 id <code>length</code> REAL lane \u7684\u957f\u5ea6 <p>lane \u7684 <code>rawShape</code> \u662f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u5b58\u653e\u5728\u6570\u636e\u5e93\u4e2d\u7684\uff0c\u4ee5 <code></code> \u548c <code>,</code>  \u4f5c\u4e3a\u5206\u9694\u7b26\u3002\u6bd4\u5982\uff0c\u4e0b\u9762\u7684 <code>rawShape</code> \u5c31\u8bb0\u5f55\u4e86\u4e09\u4e2a\u70b9\uff0c\u5206\u522b\u662f <code>(10.2,100.3)</code>\uff0c<code>(14.3,15.4)</code> \u548c <code>(13.4,12.6)</code>\u3002</p> <pre><code>10.2,100.3 14.3,15.4 13.4,12.6\n</code></pre>"},{"location":"zh/AnalysisAndEvaluation/Database/#junctionlaneinfo","title":"junctionLaneINFO","text":"<p>\u5728 SUMO \u7684\u8def\u7f51\u4e2d\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\u7684 lane\uff0c\u4e00\u79cd\u662f\u7531\u7528\u6237\u81ea\u4e3b\u751f\u6210\u7684\uff0c\u5177\u6709\u7279\u5b9a\u540d\u79f0\u7684 lane\u3002\u53e6\u4e00\u79cd\u5219\u662f\u4e3a\u4e86\u8fde\u63a5\u7b2c\u4e00\u79cd lane\uff0c\u800c\u7531 SUMO \u81ea\u52a8\u751f\u6210\u7684 lane\uff0c\u8fd9\u7c7b lane \u7684\u7279\u70b9\u662f\u540d\u79f0\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u90fd\u662f <code>:</code>\uff0c\u4e14\u90fd\u5177\u6709 <code>internal</code> \u7684\u5c5e\u6027\u3002\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u533a\u5206\uff0c\u6211\u4eec\u5c06\u7b2c\u4e8c\u79cd lane \u5b9a\u4e49\u4e3a junctionLane\u3002junctionLane \u603b\u662f\u8fde\u63a5\u4e24\u6761 lane\uff0c\u90e8\u5206 junctionLane \u8fd8\u5177\u6709\u4fe1\u53f7\u706f\u7684\u5c5e\u6027\u3002</p> \u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>id</code> TEXT PRIMARY KEY junctionLane \u7684 id <code>width</code> REAL junctionLane \u7684\u5bbd\u5ea6 <code>maxSpeed</code> REAL junctionLane \u7684\u6700\u5927\u9650\u901f <code>length</code> REAL junctionLane \u7684\u957f\u5ea6 <code>tlLogicID</code> TEXT junctionLane \u6240\u5c5e\u7684\u4fe1\u53f7\u63a7\u5236\u903b\u8f91 ID <code>tlIndex</code> INT junctionLane \u5728\u6240\u5c5e\u4fe1\u53f7\u63a7\u5236\u903b\u8f91\u4e2d\u7684\u5e8f\u53f7"},{"location":"zh/AnalysisAndEvaluation/Database/#connectioninfo","title":"connectionINFO","text":"<p>\u524d\u6587\u63d0\u5230\uff0c\u4e24\u6761 lane \u662f\u7531\u4e00\u6761 junctionLane \u8fde\u63a5\u7684\uff0cconnection \u5219\u662f\u8bb0\u5f55\u8fd9\u79cd\u8fde\u63a5\u5173\u7cfb\u7684\u3002</p> \u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>fromLane</code> TEXT \u8d77\u70b9 lane \u7684 id <code>toLane</code> TEXT \u7ec8\u70b9 lane \u7684 id <code>direction</code> TEXT \u65b9\u5411\uff0c\u5177\u4f53\u53c2\u8003 XXXX <code>via</code> TEXT \u8fde\u63a5\u4e24\u6761 lane \u7684 junctionLane \u7684 id"},{"location":"zh/AnalysisAndEvaluation/Database/#junctioninfo","title":"junctionINFO","text":"\u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>id</code> TEXT PRIMARY KEY junction \u7684 id <code>rawShape</code> TEXT junction \u7684\u51e0\u4f55\u7ed3\u6784 <p>\u4e0e lane \u7684 <code>rawShape</code> \u4e00\u6837\uff0cjunction \u7684 <code>rawShape</code> \u4e5f\u662f\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8bb0\u5f55\u7684\uff0c\u540c\u6837\u4ee5 <code></code> \u548c <code>,</code> \u4f5c\u4e3a\u5206\u9694\u7b26\u3002\u4f46\u662f junction \u7684 <code>rawShape</code> \u8bb0\u5f55\u7684\u662f junction \u7684\u5916\u90e8\u8f6e\u5ed3\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Database/#tllogicinfo","title":"tlLogicINFO","text":"\u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>id</code> TEXT PRIMARY KEY \u4fe1\u53f7\u63a7\u5236\u903b\u8f91\u7684 id\uff0c\u4e5f\u662f\u5bf9\u5e94 junction \u7684 id <code>tlType</code> TEXT \u4fe1\u53f7\u63a7\u5236\u903b\u8f91\u7684\u7c7b\u578b\uff0c\u5206\u4e3a <code>static</code>, <code>actuated</code>\u548c<code>delay_based</code> <code>preDefPhases</code> TEXT \u4fe1\u53f7\u63a7\u5236\u903b\u8f91\u7684\u76f8\u4f4d\u548c\u76f8\u5e8f\uff0c\u5177\u4f53\u53c2\u8003 XXX"},{"location":"zh/AnalysisAndEvaluation/Database/#trafficlightstates","title":"trafficLightStates","text":"\u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>frame</code> INT \u5f53\u524d\u7684\u4eff\u771f\u65f6\u523b <code>id</code> TEXT \u4fe1\u53f7\u63a7\u5236\u903b\u8f91\u7684 id <code>currPhase</code> TEXT \u5f53\u524d\u7684\u76f8\u4f4d <code>nextPhase</code> TEXT \u4e0b\u4e00\u4e2a\u76f8\u4f4d <code>switchTime</code> REAL \u5f53\u524d\u76f8\u4f4d\u5269\u4f59\u7684\u6301\u7eed\u65f6\u95f4"},{"location":"zh/AnalysisAndEvaluation/Database/#_2","title":"\u8f66\u8f86\u4fe1\u606f","text":"<p>\u8f66\u8f86\u7684\u4fe1\u606f\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u8f66\u8f86\u7684\u56fa\u6709\u5c5e\u6027\uff0c\u53e6\u4e00\u79cd\u662f\u4eff\u771f\u8fc7\u7a0b\u4e2d\u7684\u5b9e\u65f6\u72b6\u6001\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Database/#vehicleinfo","title":"vehicleINFO","text":"\u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>vid</code> INT \u8f66\u8f86\u7684 id <code>length</code> REAL \u8f66\u8f86\u7684\u957f\u5ea6 <code>width</code> REAL \u8f66\u8f86\u7684\u5bbd\u5ea6 <code>maxAccel</code> REAL \u8f66\u8f86\u7684\u6700\u5927\u52a0\u901f\u5ea6 <code>maxDecel</code> REAL \u8f66\u8f86\u7684\u6700\u5927\u51cf\u901f\u5ea6 <code>maxSpeed</code> REAL \u8f66\u8f86\u7684\u6700\u5927\u901f\u5ea6 <code>vTypeID</code> TEXT \u8f66\u578b\u7684 id <code>routes</code> TEXT \u8f66\u8f86\u7684 route \u4fe1\u606f"},{"location":"zh/AnalysisAndEvaluation/Database/#frameinfo","title":"frameINFO","text":"\u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>frame</code> INT \u5f53\u524d\u7684\u4eff\u771f\u65f6\u523b <code>vid</code> INT \u8f66\u8f86\u7684 id <code>vtag</code> TEXT \u8f66\u8f86\u7684\u89d2\u8272\uff0c\u53ef\u4ee5\u53d6 <code>ego</code>, <code>AoI</code> \u548c <code>outOfAoI</code> <code>x</code> REAL \u8f66\u8f86\u6b64\u523b\u7684 x \u4f4d\u7f6e <code>y</code> REAL \u8f66\u8f86\u6b64\u523b\u7684 y \u4f4d\u7f6e <code>yaw</code> REAL \u8f66\u8f86\u6b64\u523b\u7684 yaw \u89d2\uff0c\u4ee5 x \u8f74\u6b63\u65b9\u5411\u4e3a\u8d77\u70b9\uff0c\u9006\u65f6\u9488\u4e3a\u6b63\u65b9\u5411 <code>speed</code> REAL \u8f66\u8f86\u6b64\u523b\u7684\u901f\u5ea6 <code>accel</code> REAL \u8f66\u8f86\u6b64\u523b\u7684\u52a0\u901f\u5ea6 <code>laneID</code> TEXT \u8f66\u8f86\u6b64\u523b\u6240\u5728 lane \u7684 ID <code>lanePos</code> REAL \u8f66\u8f86\u6b64\u523b\u5728 lane \u4e0a\u7684\u8ddd\u79bb lane \u8d77\u70b9\u7684\u8ddd\u79bb <code>routeIdx</code> INT \u8f66\u8f86\u5f53\u524d\u5904\u4e8e route \u7684\u7b2c\u51e0\u6bb5\u4e0a"},{"location":"zh/AnalysisAndEvaluation/Database/#_3","title":"\u4eff\u771f\u4fe1\u606f","text":"<p>\u4eff\u771f\u4fe1\u606f\u4e3b\u8981\u5305\u62ec\u4eff\u771f\u7684\u57fa\u672c\u4fe1\u606f\u548c\u8bc4\u4ef7\u7684\u4fe1\u606f</p>"},{"location":"zh/AnalysisAndEvaluation/Database/#siminfo","title":"simINFO","text":"\u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>startTime</code> TIMESTAMP \u4eff\u771f\u542f\u52a8\u65f6\u7684\u65f6\u95f4\u6233 <code>localPosx</code> REAL <code>local area</code> \u6a21\u5f0f\u4e0b\uff0c\u56fa\u5b9a\u89c6\u89d2\u7684 x \u4f4d\u7f6e <code>localPosy</code> REAL <code>local area</code> \u6a21\u5f0f\u4e0b\uff0c\u56fa\u5b9a\u89c6\u89d2\u7684 y \u4f4d\u7f6e <code>radius</code> REAL <code>local area</code> \u6a21\u5f0f\u4e0b\uff0c\u533a\u57df\u7684\u534a\u5f84 <code>egoID</code> TEXT <code>ego track</code> \u6a21\u5f0f\u4e0b\uff0cego \u7684 id <code>netBoundary</code> TEXT \u4eff\u771f\u8def\u7f51\u7684\u8303\u56f4\uff0c\u5373\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u7684\u5750\u6807 <code>description</code> TEXT \u4eff\u771f\u7684\u6a21\u5f0f\uff0c\u6709 <code>ego track</code> \u548c <code>local area</code> \u4e24\u79cd <code>note</code> TEXT \u5907\u6ce8\u4fe1\u606f\uff0c\u53ef\u4ee5\u662f\u7b97\u6cd5\u7684\u7248\u672c\u53f7\u548c\u53c2\u6570\u7b49"},{"location":"zh/AnalysisAndEvaluation/Database/#evaluationinfo","title":"evaluationINFO","text":"\u5b57\u6bb5 \u6570\u636e\u7ed3\u6784 \u63cf\u8ff0 <code>frame</code> INT \u5f53\u524d\u7684\u4eff\u771f\u65f6\u523b <code>offset</code> REAL Ego \u504f\u79bb\u8f66\u9053\u4e2d\u5fc3\u7684\u8ddd\u79bb <code>discomfort</code> REAL Ego \u7684\u52a0\u52a0\u901f\u5ea6\u4fe1\u606f <code>collision</code> REAL Ego \u7684 TTC1 \u7684\u5012\u6570 <code>orientation</code> REAL Ego \u504f\u79bb\u8f66\u9053\u4e2d\u5fc3\u7684\u89d2\u5ea6 <code>consumption</code> REAL Ego \u7684\u6cb9\u8017\u4fe1\u606f <p>\u6570\u503c\u7ecf\u8fc7\u5904\u7406</p> <p>\u4e0a\u8ff0\u6307\u6807\u5747\u7ecf\u8fc7\u5f52\u4e00\u5316\u5904\u7406\uff0c\u5e76\u4e0d\u662f\u771f\u5b9e\u6570\u503c\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003 \u573a\u666f\u8bc4\u4ef7</p> <ol> <li> <p>TTC(Time To Collision)\uff1a\u6307\u4e24\u8f66\u4fdd\u6301\u5f53\u524d\u7684\u901f\u5ea6\u884c\u9a76\uff0c\u591a\u4e45\u540e\u4f1a\u53d1\u751f\u78b0\u649e\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"zh/AnalysisAndEvaluation/Evaluation/","title":"Evaluation","text":"<p>Evaluation\u6a21\u5757\u7528\u4e8e\u5b9e\u65f6\u8bc4\u4f30\u8f66\u8f86\u6240\u5904\u7684\u573a\u666f\u3002\u5176\u5305\u542b\u4e86\u4e94\u4e2a\u7ef4\u5ea6\u7684\u8bc4\u4ef7\u6307\u6807\uff0c\u8bc4\u4ef7\u7ed3\u679c\u53ef\u4ee5\u7528\u4e8e\u51b3\u7b56\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u573a\u666f\u63d0\u53d6\uff0c\u4e3a\u540e\u7eed\u7684\u6d4b\u8bd5\u63d0\u4f9b\u6570\u636e\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u5206\u522b\u4ecb\u7ecd\u8fd9\u4e94\u4e2a\u7ef4\u5ea6</p>"},{"location":"zh/AnalysisAndEvaluation/Evaluation/#consumption","title":"Consumption","text":"<p>\u6211\u4eec\u5e94\u7528\u5982\u4e0b\u516c\u5f0f\u6765\u8ba1\u7b97\u8f66\u8f86\u7684\u80fd\u91cf\u6d88\u8017\u60c5\u51b5\uff1a</p> \\[ P = (v*a)^2 + v^3 \\] <p>\u8fd9\u91cc \\(v\\) \u548c \\(a\\) \u5206\u522b\u662f\u8f66\u8f86\u7684\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\u3002</p> <p>\u81ea\u7531\u9a7e\u9a76\uff08\u5de1\u822a\uff09\u60c5\u51b5\u4e0b\uff0c\u8f66\u8f86\u901f\u5ea6\u8f83\u5927\uff0c\u52a0\u901f\u5ea6\u8f83\u5c0f\uff0c\u6574\u4f53\u80fd\u8017\u8f83\u9ad8\uff0c\u901f\u5ea6\u5360\u4e3b\u5bfc\u9879\uff1b \u5f53\u524d\u65b9\u6709\u7d27\u6025\u60c5\u51b5\u9700\u8981\u5239\u8f66\u65f6\uff0c\u901f\u5ea6\u6025\u5267\u53d8\u5c0f\uff0c\u52a0\u901f\u5ea6\u6bd4\u8f83\u5927\uff0c\u6574\u4f53\u80fd\u8017\u6d88\u8017\u8f83\u4f4e\u4f46\u662f\u51fa\u73b0\u4e0d\u8fde\u7eed\u53d8\u5316\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Evaluation/#collision","title":"Collision","text":"<p>\u6211\u4eec\u4f7f\u7528\u4e8c\u7ef4TTC(Time-to-Collision)\u6765\u8ba1\u7b97\u53ef\u80fd\u7684\u78b0\u649e\uff0c \u4e8c\u7ef4TTC\u5b9a\u4e49\u4e3a\uff1a\u5047\u8bbe\u4e24\u8f66\u4ee5\u5f53\u524d\u7684\u901f\u5ea6\u7684\u548c\u65b9\u5411\u7ee7\u7eed\u884c\u9a76\uff0c\u4e24\u8f66\u78b0\u649e\u6240\u9700\u8981\u7684\u65f6\u95f4\u3002 TTC\u663e\u793a\u4e86\u6f5c\u5728\u7684\u78b0\u649e\u5371\u9669\uff0c\u5176\u53ef\u4ee5\u7528\u6765\u8bc4\u4f30\u8f68\u8ff9\u89c4\u5212\u7b97\u6cd5\u7684\u5b89\u5168\u6027\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u53c2\u8003\u4e86nuplan\u7684\u5b9e\u73b0\u5e76\u6839\u636e\u6570\u636e\u683c\u5f0f\u8fdb\u884c\u4e86\u7b80\u5316\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Evaluation/#orientation","title":"Orientation","text":"<p>\u6211\u4eec\u7528\u8f66\u8f86\u504f\u79bb\u8f66\u9053\u4e2d\u5fc3\u7ebf\u7684\u65b9\u5411\uff08\u901f\u5ea6\u65b9\u5411\u4e0e\u8f66\u9053\u4e2d\u5fc3\u7ebf\u7684\u5939\u89d2\uff09\u4f5c\u4e3aorientation\u3002</p> \\[ (\\sin(\\theta_{ego}) - \\sin(\\theta_{ref}))^2 \\] <p>\u5176\u4e2d\uff0c\\(\\theta_{ego}\\) \u548c \\(\\theta_{ref}\\) \u5206\u522b\u662f\u81ea\u8f66\u548c\u81ea\u8f66\u5728\u53c2\u8003\u7ebf\u4e0a\u6295\u5f71\u70b9\u7684\u89d2\u5ea6\uff08\u4e16\u754c\u5750\u6807\u7cfb\uff09\uff0c\u8fd9\u91cc\u6709\u4e09\u70b9\u9700\u8981\u6ce8\u610f\uff1a 1. \u4e3a\u4e86\u5c55\u793a\u65b9\u4fbf\uff0c\u6211\u4eec\u4f7f\u7528 \\(\\sin\\) \u8fdb\u884c\u5f52\u4e00\u5316 2. \u5728\u8def\u53e3\u5185\u8003\u8651\u504f\u5411\u89d2\u610f\u4e49\u4e0d\u5927\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684 \\(\\theta_{ref}\\) \u5b9e\u9645\u4e0a\u6307\u7684\u662f\u201c\u5386\u53f2\u8f68\u8ff9\u4e2d\uff0c\u6700\u8fd1\u7684\uff0c\u5728<code>NormalLane</code>\u4e0a\u5bf9\u5e94\u7684\u70b9\u201d 3. \u540c\u6837\u662f\u4e3a\u4e86\u5c55\u793a\u65b9\u4fbf\uff0c\u6211\u4eec\u589e\u52a0\u4e86<code>delay</code>\u9879\uff0c\u4f7f\u5f97\u8f6c\u5f2f\u663e\u793a\u5730\u66f4\u52a0\u987a\u6ed1\u3002</p> <p>orientation\u53ef\u4ee5\u4f53\u73b0\u51fa\u8f66\u8f86\u7684\u8f6c\u5f2f\u884c\u4e3a\uff0c\u7279\u522b\u662f\u9700\u8981\u65e0\u4fdd\u62a4\u5de6\u8f6c\u573a\u666f\u65f6\uff0c\u53ef\u4ee5\u5229\u7528Orientation\u7684\u7ed3\u679c\u7b5b\u9009\u51fa\u4e00\u4e9b\u573a\u666f\u6765\u8fdb\u884c\u6d4b\u8bd5\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Evaluation/#discomfort","title":"Discomfort","text":"<p>\u6211\u4eec\u7528jerk \u7684\u5e73\u65b9\u6765\u8868\u793adiscomfort\uff0c </p> \\[ \\left(\\frac{da}{dt}\\right)^2 \\] <p>\u8fd9\u91cc \\(a\\) \u662f\u52a0\u901f\u5ea6\u3002 jerk\u53ef\u4ee5\u8868\u73b0\u51fa\u8f66\u8f86\u5728\u8fd0\u52a8\u65f6\u51fa\u73b0\u7684\u6025\u5239\u4ee5\u53ca\u7a81\u7136\u542f\u52a8\u5bf9\u4e58\u5ba2\u7684\u5f71\u54cd\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Evaluation/#offset","title":"Offset","text":"<p>\u6211\u4eec\u4ee5\u8f66\u8f86\u504f\u79bb\u8f66\u9053\u4e2d\u5fc3\u7ebf\uff08\u5728junction\u91cc\u9762\uff0c\u6211\u4eec\u4e0d\u4f1a\u8ba1\u7b97\u6b64\u9879\uff09\u8ddd\u79bb\u7684\u5e73\u65b9\u4f5c\u4e3aoffset\u3002</p> \\[ d^2 \\] <p>\u8fd9\u91cc \\(d\\) \u662f\u8f66\u8f86\u5728Frenet\u5750\u6807\u7cfb\u4e0b\u7684\u6a2a\u5750\u6807(lateral coordinate).</p> <p>offset\u53ef\u4ee5\u7528\u4ee5\u68c0\u6d4b\u8f66\u8f86\u53d8\u9053\u7684\u884c\u4e3a\u3002\u7531\u4e8eLimSim \u63d0\u4f9b\u7684\u9ed8\u8ba4\u89c4\u5212\u5668\u662f\u5efa\u7acb\u5728frenet\u5750\u6807\u7cfb\u4e0b\u7684\uff0c\u56e0\u6b64\u8fd9\u4e00\u9879\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u8ba1\u7b97\u51fa\u6765\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Evaluation/#visualization","title":"Visualization","text":"<p>\u6211\u4eec\u4f7f\u7528\u4e94\u661f\u56fe\u6765\u53ef\u89c6\u5316\u4e0a\u9762\u4e94\u4e2a\u7ef4\u5ea6\u7684\u7ed3\u679c\uff0c\u4e3a\u4e86\u4f7f\u7ed3\u679c\u8868\u73b0\u51fa\u4e00\u81f4\u6027\uff0c\u6211\u4eec\u5bf9\u7ed3\u679c\u8fdb\u884c\u4e86\u9002\u5f53\u7684\u53d8\u6362\u3002</p>"},{"location":"zh/AnalysisAndEvaluation/Evaluation/#data-retrieval","title":"Data Retrieval","text":"<p>\u6211\u4eec\u5c06\u5b9e\u65f6\u8bc4\u4f30\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u4ee5\u8fdb\u884c\u573a\u666f\u63d0\u53d6\u548c\u5206\u6790\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u5c06\u8bc4\u4f30\u7ed3\u679c\u8f6c\u5316\u4e3a<code>DataFrame</code>: <pre><code>from utils.load_data import load_data_from_database\nevaluation_df = load_data_from_data_base(path_to_data_base, 'evaluation')\n</code></pre></p>"},{"location":"zh/DecisionAndPlanning/Overview/","title":"Overview","text":"<p>LimSim\u4e2d\u4f7f\u7528<code>TrafficManager</code>\u7c7b\u6765\u7edf\u4e00\u7ba1\u7406\uff0c\u8fd9\u4e2a\u7c7b\u4e3b\u8981\u8d1f\u8d23\u5bf9\u4e8eAOI\u8303\u56f4\u5185\u7684\u8f66\u8f86\u8fdb\u884c\u201c\u9884\u6d4b-\u51b3\u7b56-\u89c4\u5212\u201d\uff08PDP\uff09\u6d41\u7a0b\uff0c\u6700\u7ec8\u4e3a\u6bcf\u8f86\u8f66\u751f\u6210\u4e00\u6761\u5408\u7406\u3001\u5b89\u5168\u3001\u7b26\u5408\u8fd0\u52a8\u5b66\u7ea6\u675f\u7684\u8f68\u8ff9\u3002</p> <p>\u5728\u4f7f\u7528\u65f6\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u521d\u59cb\u5316<code>TrafficManager</code>\u7c7b\uff0c\u521d\u59cb\u5316\u9700\u8981\u7684\u53c2\u6570\u5982\u4e0b\uff1a</p> \u53c2\u6570\u540d \u5fc5\u987b/\u53ef\u9009 \u63cf\u8ff0 <code>model</code> \u5fc5\u987b \u4f20\u5165\u7684\u5305\u542bSumo\u4eff\u771f\u7684\u4eff\u771f\u6a21\u578b\uff0c\u5e94\u5f53\u4e3a<code>Model</code>\u7c7b\u6216\u8005<code>ReplayModel</code>\u7c7b <code>predictor</code> \u53ef\u9009 \u8f66\u8f86\u7684\u9884\u6d4b\u5668\uff0c\u5e94\u5f53\u662f\u4e00\u4e2a<code>AbstractPredictor</code>\u00a0\u7684\u5b50\u7c7b\u3002 <code>ego_decision</code> \u53ef\u9009 \u81ea\u8f66\u7684\u51b3\u7b56\u5668\uff0c\u5e94\u5f53\u662f\u4e00\u4e2a<code>AbstractEgoDecisionMaker</code>\u00a0\u7684\u5b50\u7c7b\u3002 <code>ego_planner</code> \u53ef\u9009 \u81ea\u8f66\u7684\u89c4\u5212\u5668\uff0c\u5e94\u5f53\u662f\u4e00\u4e2a<code>AbstractEgoPlanner</code>\u00a0\u7684\u5b50\u7c7b\u3002 <code>multi_decision</code> \u53ef\u9009 \u9002\u7528\u4e8e\u591a\u8f66\u7684\u8054\u5408\u51b3\u7b56\u5668\uff0c\u5e94\u5f53\u662f\u4e00\u4e2a<code>AbstractMultiDecisionMaker</code>\u00a0\u7684\u5b50\u7c7b\u3002 <code>multi_veh_planner</code> \u53ef\u9009 \u9002\u7528\u4e8e\u591a\u8f66\u7684\u8054\u5408\u89c4\u5212\u5668\uff0c\u5e94\u5f53\u662f\u4e00\u4e2a<code>AbstractMultiPlanner</code>\u00a0\u7684\u5b50\u7c7b\u3002 <code>config_file_path</code> \u53ef\u9009 \u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u3002\u5176\u8d1f\u8d23\u5b58\u50a8PDP\u6d41\u7a0b\u4e2d\u7684\u4e00\u4e9b\u91cd\u8981\u53ef\u4fee\u6539\u53c2\u6570\u3002 <p>LimSim\u5df2\u4e8b\u5148\u5b9e\u73b0\u4e86PDP\u5168\u6d41\u7a0b\u7684\u65b9\u6cd5\uff0c\u8fd9\u610f\u5473\u7740\u7528\u6237\u4e0d\u9700\u8981\u586b\u5145\u4efb\u4f55\u7b97\u6cd5\u5373\u53ef\u6b63\u5e38\u8fd0\u884cLimSim\u3002</p> <p>\u540c\u65f6\uff0cLimSim\u4e5f\u652f\u6301\u7528\u6237\u66ff\u6362PDP\u6d41\u7a0b\u4e2d\u7684\u90e8\u5206\u6216\u5168\u90e8\u7b97\u6cd5\uff0c\u53ea\u9700\u7ee7\u627f\u7ed9\u5b9a\u57fa\u7c7b\u5e76\u586b\u5145\u63a5\u53e3\uff0c\u5373\u53ef\u4f7fLimsim\u62e5\u6709\u5168\u65b0\u8868\u73b0\u3002</p>"},{"location":"zh/GettingStarted/installDeploy/","title":"Installation & Deployment","text":"<p>LimSim \u662f\u4e00\u6b3e\u9762\u5411\u51b3\u7b56-\u89c4\u5212\u7b97\u6cd5\u6d4b\u8bd5\u7684\u5fae\u89c2\u4eff\u771f\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u8fdb\u884c\u5b8f\u5fae\u89c2\u4e00\u4f53\u7684\u957f\u65f6\u4eff\u771f\u3002</p>"},{"location":"zh/GettingStarted/installDeploy/#_1","title":"\u5b89\u88c5\u90e8\u7f72","text":"<p>LimSim \u4e3b\u8981\u7531 Python \u7f16\u5199\uff0c\u65e0\u9700\u7f16\u8bd1\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u6e90\u7801\u3002\u4f46\u662f\u5728\u8fd0\u884c\u524d\u8bf7\u4fdd\u8bc1\u5177\u6709\u4ee5\u4e0b\u5f00\u53d1\u73af\u5883\uff1a</p> <ul> <li>3.9.0 &lt;= Python &lt;= 3.11.0</li> <li>SUMO &gt;= 1.15.0 (\u63a8\u8350\u4f7f\u7528 1.15.0 \u7248\u672c)</li> </ul> <p>\u5728\u8fd0\u884c\u73af\u5883\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u4e0b\u8f7d LimSim \u6e90\u7801\u5230\u672c\u5730\u5373\u53ef\uff1a</p> <pre><code>git clone https://github.com/PJLab-ADG/LimSim.git\n</code></pre> <p>\u6700\u540e\uff0c\u9700\u8981\u5b89\u88c5\u6240\u9700\u7684 Python \u6240\u9700\u7684\u6269\u5c55\uff1a</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>\u81f3\u6b64\uff0cLimSim \u7684\u672c\u5730\u5b89\u88c5\u90e8\u7f72\u5b8c\u6210\u3002</p>"},{"location":"zh/GettingStarted/installDeploy/#_2","title":"\u4eff\u771f\u793a\u4f8b","text":"<p>\u5728\u6839\u76ee\u5f55\u4e0b\uff0c\u6709\u4e00\u4e9b\u4eff\u771f\u793a\u4f8b\u6765\u8bf4\u660e LimSim \u7684\u529f\u80fd\uff0c\u8bbf\u95ee\u4e0b\u9762\u7684\u94fe\u63a5\uff0c\u4e86\u89e3\u529f\u80fd\u8be6\u60c5\uff1a</p> <ul> <li>\u5b9e\u65f6\u4eff\u771f</li> <li>\u56de\u653e\u4e0e\u4ea4\u4e92\u5f0f\u56de\u653e</li> <li>\u5176\u4ed6\u529f\u80fd</li> </ul>"},{"location":"zh/GettingStarted/otherFunction/","title":"Other Functions","text":"<p>\u4e3a\u9002\u5e94\u4e0d\u540c\u7684\u4efb\u52a1\u9700\u6c42\uff0cLimSim \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u529f\u80fd\uff0c\u8be6\u60c5\u5982\u4e0b\u3002</p>"},{"location":"zh/GettingStarted/otherFunction/#_1","title":"\u56fa\u5b9a\u573a\u666f\u4eff\u771f","text":"<p>\u9664\u4e86\u8ddf\u968f Ego \u8fdb\u884c\u957f\u65f6\u7684\u4eff\u771f\u6d4b\u8bd5\uff0cLimSim \u8fd8\u63d0\u4f9b\u4e86\u56fa\u5b9a\u89c6\u89d2\u7684\u4eff\u771f\u3002\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0cAoI \u5e76\u4e0d\u968f\u67d0\u8f86\u8f66\u79fb\u52a8\uff0c\u800c\u662f\u56fa\u5b9a\u5728\u6307\u5b9a\u7684\u4f4d\u7f6e\u4e0a\uff0c\u800c\u8fdb\u5165 AoI \u7684\u8f66\u8f86\u4ecd\u7136\u4f1a\u53d7\u5230\u51b3\u7b56\u89c4\u5212\u7b97\u6cd5\u7684\u63a7\u5236\u3002\u8be5\u6a21\u5f0f\u7684\u8c03\u7528\u65b9\u6cd5\u4e0e\u5b9e\u65f6\u4eff\u771f\u57fa\u672c\u4e00\u81f4\uff0c\u8fd0\u884c <code>FixedSimExample.py</code> \u5373\u67e5\u770b\u56fa\u5b9a\u573a\u666f\u7684\u4eff\u771f\u793a\u4f8b\u3002\u8be5\u6a21\u5f0f\u4e0b\u540c\u6837\u6709\u56de\u653e\u529f\u80fd\u548c\u4ea4\u4e92\u5f0f\u56de\u653e\u529f\u80fd\uff0c\u8fd0\u884c <code>FixedSimReplayExample.py</code> \u548c <code>FixedSimInterReplayExample</code> \u53ef\u67e5\u770b\u76f8\u5173\u7684\u793a\u4f8b\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"zh/GettingStarted/otherFunction/#_2","title":"\u952e\u76d8\u64cd\u7eb5\u51b3\u7b56","text":"<p>LimSim \u7684\u51b3\u7b56\u89c4\u5212\u7b97\u6cd5\u63d0\u4f9b\u4e86\u952e\u76d8\u64cd\u7eb5\u7684\u529f\u80fd\uff0c\u5728\u8fd0\u884c\u51b3\u7b56\u89c4\u5212\u7b97\u6cd5\u65f6\uff0c\u70b9\u51fb\u952e\u76d8 <code>&lt;-</code> \u952e\u6216 <code>A</code> \u952e\uff0c\u4f1a\u5411 Ego \u4f20\u9012\u5411\u5de6\u53d8\u9053\u7684\u51b3\u7b56\u4fe1\u606f\uff0c\u5982\u679c\u73af\u5883\u5141\u8bb8\uff0c\u8f66\u8f86\u4f1a\u5411\u5de6\u53d8\u9053\u3002\u7c7b\u4f3c\u7684\uff0c\u70b9\u51fb <code>-&gt;</code> \u952e\u6216 <code>D</code> \u952e\uff0cEgo \u4f1a\u6536\u5230\u5411\u53f3\u53d8\u9053\u7684\u51b3\u7b56\u4fe1\u606f\u3002</p>"},{"location":"zh/GettingStarted/otherFunction/#_3","title":"\u4eff\u771f\u6c47\u62a5","text":"<p>\u5bf9\u4e8e\u4eff\u771f\u751f\u6210\u7684\u6570\u636e\u5e93\uff0cLimSim \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6574\u4f53\u7684\u5206\u6790\u4e0e\u6c47\u62a5\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u6307\u4ee4\uff0c\u4f1a\u751f\u6210\u6c47\u62a5\u6587\u4ef6 <code>report/report.md</code>\u3002</p> <pre><code>python utils/report.py egoTrackingTest.db\n</code></pre> <p>\u6c47\u62a5\u6587\u4ef6\u4e3b\u8981\u662f\u5bf9\u4eff\u771f\u7684\u7ed3\u679c\u7684\u6574\u4f53\u8bc4\u4ef7\uff0c\u6bd4\u5982\u7ed8\u5236\u901f\u5ea6\u5206\u5e03\u66f2\u7ebf\uff0c\u663e\u793a\u5371\u9669\u573a\u666f\u7684\u6b21\u6570\u7b49\u3002</p>"},{"location":"zh/GettingStarted/otherFunction/#limsim-sumo-carla","title":"LimSim, SUMO, CARLA \u534f\u540c\u4eff\u771f","text":"<p>CARLA \u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u81ea\u52a8\u9a7e\u9a76\u4eff\u771f\u5668\uff0c\u5177\u6709\u5305\u62ec\u611f\u77e5\u3001\u5b9a\u4f4d\u7b49\u5728\u5185\u7684\u591a\u4e2a\u529f\u80fd\uff0c\u53ef\u4ee5\u7528\u6765\u5e2e\u52a9\u8bad\u7ec3\u81ea\u52a8\u9a7e\u9a76\u7684\u5404\u4e2a\u6a21\u5757\u3002CARLA \u5b98\u65b9\u63d0\u4f9b\u7684 SUMO co-simulation \u529f\u80fd\u4f7f\u5f97\u7528\u6237\u53ef\u4ee5\u5229\u7528 SUMO \u7ba1\u7406\u4eff\u771f\u7684\u80cc\u666f\u4ea4\u901a\u6d41\uff0c\u4e5f\u4f7f\u5f97 LimSim, SUMO, CARLA \u7684\u534f\u540c\u4eff\u771f\u6210\u4e3a\u53ef\u80fd\u3002</p> <p>\u8fdb\u884c\u534f\u540c\u4eff\u771f\u4e3b\u8981\u5229\u7528 SUMO \u7684\u5e73\u884c\u4eff\u771f(Parallel simulation) \u529f\u80fd\uff0c\u5f00\u542f\u8fd9\u4e2a\u529f\u80fd\u540e\uff0c\u4e3b\u7a0b\u5e8f\u7684\u53ef\u4ee5\u4f5c\u4e3a Server \u4eff\u771f\uff0c\u800c\u5b50\u7a0b\u5e8f\u53ef\u4ee5\u4f5c\u4e3a Client \u63a5\u53d7\u6570\u636e\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06 LimSim \u4f5c\u4e3a\u4e3b\u7a0b\u5e8f\u8fd0\u884c\uff0c\u5c06 CARLA \u7684 co-simulation \u4f5c\u4e3a\u5b50\u7a0b\u5e8f\u8fd0\u884c\u3002</p>"},{"location":"zh/GettingStarted/realtimeSim/","title":"Real-time Simulation","text":"<p>\u8ddf\u968f Ego \u7684\u5b9e\u65f6\u4eff\u771f\u662f LimSim \u7684\u57fa\u7840\u529f\u80fd\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u6307\u4ee4\uff0c\u4f53\u9a8c\u4e00\u4e0b\uff1a</p> <pre><code>cd LimSim\npython ModelExample.py\n</code></pre>"},{"location":"zh/GettingStarted/realtimeSim/#_1","title":"\u754c\u9762\u5e03\u5c40","text":"<p>\u82e5\u4e0a\u8ff0\u6307\u4ee4\u8fd0\u884c\u6b63\u5e38\uff0c\u4f1a\u663e\u793a\u5982\u4e0b\u753b\u9762\uff1a</p> <p></p> <p>\u6574\u4e2a\u56fe\u5f62\u754c\u9762\u5206\u4e3a\u4e94\u4e2a\u533a\u57df\u3002A \u533a\u663e\u793a\u8def\u7f51\u7684\u5168\u5c40\u89c6\u89d2\uff0c\u9ec4\u8272\u5706\u5708\u662f\u8ddf\u968f Ego \u79fb\u52a8\u7684\u611f\u5174\u8da3\u533a\u57df (Area of Interest, AoI)\uff0c\u5373\u663e\u793a Ego \u5728\u6574\u4e2a\u8def\u7f51\u4e2d\u7684\u5b9e\u65f6\u4f4d\u7f6e\uff1bB \u533a\u663e\u793a Ego \u7684\u8ddf\u968f\u89c6\u89d2\uff0c\u9ec4\u8272\u534a\u900f\u660e\u5706\u5708\u540c\u6837\u662f AoI\uff0c\u4e0e A \u533a\u4e2d\u7684\u5706\u5708\u662f\u4e00\u81f4\u7684\uff0c\u8f66\u8f86\u524d\u65b9\u7d2b\u8272\u66f2\u7ebf\u4e3a\u8f68\u8ff9\u89c4\u5212\u7b97\u6cd5\u63d0\u4f9b\u7684\u8f68\u8ff9\uff1bC \u533a\u4e3a Ego \u7684\u72b6\u6001\u663e\u793a\u533a\uff0c\u4f1a\u663e\u793a Ego \u7684\u5b9e\u65f6\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\u3002\u6ce8\u610f X \u8f74\u7684\u5750\u6807\uff0c0 \u70b9\u5728 x \u8f74\u7684\u6b63\u4e2d\u95f4\uff0c\u8868\u793a\u5f53\u524d\u65f6\u523b\uff0c0 \u70b9\u5de6\u534a\u8fb9\u8868\u793a\u5386\u53f2\u7684\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\uff0c0 \u70b9\u7684\u53f3\u534a\u8fb9\u8868\u793a\u672a\u6765\u7684\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\uff08\u5373\u89c4\u5212\u7b97\u6cd5\u63d0\u4f9b\u7684\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\uff09\uff0c\u6b64\u5916\u901f\u5ea6\u8f74\u7684\u53d6\u503c\u8303\u56f4\u53d6\u51b3\u4e8e\u9053\u8def\u7684\u9650\u901f\uff1bD \u533a\u4e3a\u4eff\u771f\u4fe1\u606f\u5c55\u793a\u533a\u57df\uff0c\u663e\u793a\u4eff\u771f\u7684\u6a21\u5f0f\uff0c\u4eff\u771f\u65f6\u523b\uff0cEgo \u6240\u5728\u8f66\u9053\uff0c\u4ee5\u53ca Ego \u5728\u8f66\u9053\u4e0a\u7684\u4f4d\u7f6e\uff1bE \u533a\u4e3a\u573a\u666f\u8bc4\u4ef7\u533a\u57df\uff0c\u5b9e\u65f6\u663e\u793a\u5bf9\u573a\u666f\u7684\u8bc4\u4ef7\uff0c\u6bcf\u4e2a\u6307\u6807\u7684\u5177\u4f53\u542b\u4e49\u8bf7\u53c2\u8003 \u573a\u666f\u8bc4\u4ef7\u3002</p> <p>AoI (Area of Interest)</p> <p>AoI \u53ef\u4ee5\u89c6\u4e3a Ego \u7684\u611f\u77e5\u533a\u57df\uff0c\u662f LimSim \u4e3a\u4e86\u8fdb\u884c\u957f\u65f6\u4eff\u771f\u505a\u51fa\u7684\u6298\u4e2d\u65b9\u6848\u3002\u957f\u65f6\u4eff\u771f\u610f\u5473\u7740\u5927\u8303\u56f4\u8def\u7f51\u548c\u5927\u91cf\u4ea4\u901a\u6d41\uff0c\u65e0\u6cd5\u5bf9\u6240\u6709\u8f66\u8f86\u8fdb\u884c\u8f68\u8ff9\u89c4\u5212\u3002\u56e0\u6b64\uff0cAoI \u5185\u90e8\u7684\u8f66\u8f86\uff0c\u5176\u884c\u4e3a\u7531\u51b3\u7b56-\u89c4\u5212\u6a21\u578b\u63a7\u5236\uff0c\u5728 Ego \u7684\u5468\u56f4\u8425\u9020\u591a\u6837\u4e14\u771f\u5b9e\u7684\u9a7e\u9a76\u73af\u5883\uff1bAoI \u5916\u90e8\u7684\u8f66\u8f86\uff0c\u7531 SUMO \u63a7\u5236\uff0c\u7b26\u5408\u57fa\u672c\u7684\u4ea4\u901a\u89c4\u5f8b\u3002</p>"},{"location":"zh/GettingStarted/realtimeSim/#_2","title":"\u793a\u4f8b\u5206\u6790","text":"<p>\u8be5\u4eff\u771f\u793a\u4f8b\u5177\u6709\u5982\u4e0b\u7684\u7ed3\u6784\uff1a</p> <pre><code>from simModel.egoTracking.model import Model\nfrom trafficManager.traffic_manager import TrafficManager\nnetFile = 'data/networkFiles/CarlaTown05/Town05.net.xml'\nrouFile = 'data/networkFiles/CarlaTown05/carlavtypes.rou.xml,data/networkFiles/CarlaTown05/Town05.rou.xml'\nif __name__ == '__main__': # (1)\nmodel = Model(\negoID = '61', \nnetFile = netFile, \nrouFile = rouFile, \ndataBase = 'egoTrackingTest.db'\n)\nmodel.start()\nplanner = TrafficManager(model)\nwhile not model.tpEnd:\nmodel.moveStep()\nif model.timeStep % 5 == 0:\nroadgraph, vehicles = model.exportSce()\nif model.tpStart and roadgraph:\ntrajectories = planner.plan(\nmodel.timeStep * 0.1, roadgraph, vehicles)\nmodel.setTrajectories(trajectories)\nelse:\nmodel.ego.exitControlMode() # (2)\nmodel.updateVeh()\nmodel.destroy()\n</code></pre> <ol> <li>  \u5728 Windows \u7cfb\u7edf\u4e0b\uff0c\u8bf7\u52a1\u5fc5\u4fdd\u8bc1 model \u7684\u76f8\u5173\u4ee3\u7801\u90fd\u5728 <code>if __name__ == '__main__':</code> \u8303\u56f4\u5185\uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u5d29\u6e83\u3002\u4e3b\u8981\u539f\u56e0\u5728\u4e8e SUMO \u4f7f\u7528\u4e86 Python \u7684 multiprocessing \u6a21\u5757\uff0c\u800c\u8be5\u6a21\u5757\u4ea7\u751f\u8fdb\u7a0b\u7684\u65b9\u6cd5\uff0c\u5728 Windows \u4e0b \u548c Linux \u4e0b\u5b58\u5728\u4e0d\u540c\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003\uff1acontexts-and-start-methods</li> <li>\u5982\u679c\u4e0d\u518d\u63a7\u5236 Ego\uff0c\u8bb0\u5f97\u5c06\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9 SUMO\u3002</li> </ol> <p>\u7a0b\u5e8f\u7684\u7b2c 8 \u884c\u662f\u6a21\u578b\u7684\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u7684\u53c2\u6570\u6709 <code>egoID</code> \uff0c\u7528\u6765\u6307\u5b9a\u7684 Ego car \u7684 ID\u3002\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 SUMO \u8fdb\u884c\u73af\u5883\u4ea4\u901a\u6d41\u7684\u7ba1\u7406\uff0c\u8def\u7f51\u4e2d\u6240\u6709\u8f66\u8f86\u7684\u8def\u5f84\u4fe1\u606f\u5b9e\u9645\u4e0a\u662f\u88ab\u5b9a\u4e49\u5728 <code>Town05.rou.xml</code> \u4e2d\u7684\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u67e5\u770b\u8fd9\u4e2a\u6587\u4ef6\uff0c\u9009\u62e9\u559c\u6b22\u7684\u4e00\u8f86\u8f66\u4f5c\u4e3a Ego car\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u53c2\u8003 \u81ea\u5b9a\u4e49\u8f66\u8f86\u548c\u8def\u5f84\u6765\u751f\u6210\u7279\u5b9a\u8def\u5f84\u7684\u8f66\u8f86\u6765\u8fdb\u884c\u6a21\u578b\u7684\u4eff\u771f\u548c\u7b97\u6cd5\u7684\u6d4b\u8bd5\u3002\u7136\u540e\u662f\u4eff\u771f\u4f7f\u7528\u7684\u8def\u7f51\u8def\u7f51\u6587\u4ef6 <code>netFile</code> \u548c\u8def\u5f84\u6587\u4ef6 <code>rouFile</code> \uff0c\u8fd9\u4e9b\u6587\u4ef6\u7684\u751f\u6210\u548c\u5b9a\u4e49\u8bf7\u53c2\u8003 SUMO \u7684\u6587\u6863\u3002<code>dataBase</code> \u4e3a\u8bb0\u5f55\u4eff\u771f\u6570\u636e\u7684\u6570\u636e\u5e93\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\u3002</p> <p>\u7b2c 15 \u884c\u662f\u8f68\u8ff9\u89c4\u5212\u7b97\u6cd5\u7684\u521d\u59cb\u5316\uff0c\u5305\u62ec\u8f68\u8ff9\u9884\u6d4b\u3001\u51b3\u7b56\u3001\u89c4\u5212\u7b49\u591a\u4e2a\u6a21\u5757\u3002\u8fd9\u91cc\u4f7f\u7528\u4e86 LimSim \u5b9e\u73b0\u7684\u57fa\u7840\u7248\u672c\uff08\u9ed8\u8ba4\u53c2\u6570\uff09\uff0c\u7528\u4ee5\u63a7\u5236 AoI \u4e2d\u7684\u8f66\u8f86\uff0c\u4f60\u4e5f\u53ef\u4ee5\u66ff\u6362\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u73af\u8282\u4e3a\u4f60\u81ea\u5df1\u7684\u7b97\u6cd5\uff0c\u5177\u4f53\u7684\u81ea\u5b9a\u4e49\u65b9\u6cd5\u8bf7\u53c2\u8003 \u81ea\u5b9a\u4e49\u7b97\u6cd5\u3002</p> <p>17 \u884c\u5f00\u59cb\u662f\u7a0b\u5e8f\u8fd0\u884c\u7684\u4e3b\u8981\u73af\u8282\uff0c<code>model.tpEnd</code> \u662f\u5e03\u5c14\u53d8\u91cf\uff0c\u7528\u6765\u8868\u5f81 Ego \u662f\u5426\u5230\u8fbe\u7ec8\u70b9\uff0c\u5373\u7a0b\u5e8f\u662f\u5426\u7ed3\u675f\u3002<code>model.moveStep()</code> \u548c <code>model.updateVeh()</code> \u662f\u4eff\u771f\u66f4\u65b0\u7684\u6d41\u7a0b\uff0c\u524d\u8005\u7528\u4e8e\u83b7\u53d6\u6240\u6709\u4ea4\u901a\u53c2\u4e0e\u8005\u7684\u4fe1\u606f\uff0c\u540e\u8005\u7528\u4e8e\u66f4\u65b0\uff08\u63a7\u5236\uff09\u6240\u6709\u4ea4\u901a\u53c2\u4e0e\u8005\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u5728\u4e24\u8005\u4e4b\u95f4\uff0c\u53ef\u4ee5\u7528\u8f68\u8ff9\u89c4\u5212\u7b97\u6cd5\u63a7\u5236 AoI \u4e2d\u7684\u8f66\u8f86\u3002</p> <p>\u7531\u4e8e\u8f68\u8ff9\u89c4\u5212\u7b97\u6cd5\u901a\u5e38\u6bd4\u8f83\u8017\u65f6\uff0c\u800c\u4e14\u4e00\u6b21\u89c4\u5212\u53ef\u4ee5\u7ed9\u51fa\u672a\u6765\u591a\u5e27\u7684\u8f68\u8ff9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6bcf 5 \u5e27\u8fdb\u884c\u4e00\u6b21\u8f68\u8ff9\u89c4\u5212\uff0c\u5373 <code>if model.timeStep % 5 == 0:</code>\u3002\u7136\u540e\uff0c\u7531 <code>roadgraph, vehicles = model.exportSce()</code> \u83b7\u5f97\u5f53\u524d\u65f6\u523b Ego \u9644\u8fd1\u7684\u573a\u666f\u3002\u5176\u4e2d\uff0c<code>roadgraph</code> \u4e3a Ego \u5468\u56f4\u7684\u8def\u7f51\u4fe1\u606f\uff0c<code>vehicles</code> \u4e3a Ego \u5468\u56f4\u8f66\u8f86\u7684\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u7684\u4f7f\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003 XXXXX\u3002\u8f68\u8ff9\u89c4\u5212\u7b97\u6cd5\u8fd4\u56de\u7684\u8f68\u8ff9\u5219\u901a\u8fc7 <code>model.setTrajectories()</code> \u4f20\u56de\u4eff\u771f\u4e2d\u3002</p> <p>\u4e0a\u8ff0\u4eff\u771f\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u4f1a\u5c06\u4eff\u771f\u8fc7\u7a0b\u4e2d\u6240\u6709\u7684\u6570\u636e\u5b58\u653e\u5728 <code>egoTrackingTest.db</code> \u4e2d\uff0c\u4f9b\u56de\u653e\u548c\u5206\u6790\u6240\u7528\uff0c\u5173\u4e8e\u6570\u636e\u5e93\u7684\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003\u6570\u636e\u5e93\u3002</p>"},{"location":"zh/GettingStarted/replayAndIreplay/","title":"Replay & Interactive Replay","text":"<p>\u56de\u653e\u662f\u4eff\u771f\u7a0b\u5e8f\u7684\u91cd\u8981\u529f\u80fd\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6df1\u5165\u5206\u6790\u5371\u9669\u573a\u666f\u548c\u5931\u8d25\u573a\u666f\u4ea7\u751f\u7684\u539f\u56e0\uff0c\u4ece\u800c\u4f18\u5316\u76f8\u5173\u7b97\u6cd5\u3002LimSim \u540c\u6837\u63d0\u4f9b\u4e86\u56de\u653e\u529f\u80fd\uff0c\u53ef\u4ee5\u5bf9\u5b9e\u65f6\u4eff\u771f\u751f\u6210\u7684\u6570\u636e\u8fdb\u884c\u56de\u653e\u3002\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4ea4\u4e92\u5f0f\u56de\u653e\u529f\u80fd\uff0c\u5e2e\u52a9\u7b97\u6cd5\u5728\u5173\u952e\u573a\u666f\u4e0a\u8fdb\u884c\u66f4\u65b0\u8fed\u4ee3\u3002</p>"},{"location":"zh/GettingStarted/replayAndIreplay/#_1","title":"\u4eff\u771f\u56de\u653e","text":"<p>\u5728\u6839\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c\u4e0b\u5217\u6307\u4ee4\u53ef\u4ee5\u8c03\u7528 LimSim \u7684\u56de\u653e\u529f\u80fd\uff1a</p> <pre><code>python ReplayExample.py\n</code></pre>"},{"location":"zh/GettingStarted/replayAndIreplay/#_2","title":"\u754c\u9762\u5e03\u5c40","text":"<p>\u4e0a\u8ff0\u6307\u4ee4\u4f1a\u8c03\u51fa\u56de\u653e\u529f\u80fd\u7684\u754c\u9762\uff0c\u5982\u4e0b\u56fe\u6240\u793a:</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u76f8\u8f83\u4e8e\u5b9e\u65f6\u4eff\u771f\uff0c\u56de\u653e\u7684\u754c\u9762\u591a\u4e86\u4e00\u4e2a\u63a7\u5236\u9762\u677f\uff0c\u8be5\u533a\u57df\u53ef\u4ee5\u63a7\u5236\u56de\u653e\u7684\u5f00\u59cb\u4e0e\u6682\u505c\uff0c\u56de\u653e\u7684\u901f\u5ea6\u7b49\uff0c\u65b9\u4fbf\u67e5\u770b\u4eff\u771f\u7684\u5173\u952e\u7ec6\u8282\u3002\u6b64\u5916\u5728 B \u533a\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8f66\u8f86\u524d\u65b9\u6709\u7c89\u7ea2\u8272\u7684\u66f2\u7ebf\uff0c\u8be5\u66f2\u7ebf\u662f\u6570\u636e\u5e93\u8bb0\u5f55\u7684\u8f66\u8f86\u7684\u672a\u6765\u8f68\u8ff9\uff0c\u8f66\u8f86\u4f1a\u5b8c\u5168\u6309\u7167\u7c89\u7ea2\u8272\u66f2\u7ebf\u7684\u8f68\u8ff9\u884c\u9a76\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e3a <code>dbTrajectory</code>\uff1b\u4e0e\u4e4b\u5bf9\u5e94\u7684\uff0c\u8f68\u8ff9\u89c4\u5212\u7b97\u6cd5\u63d0\u4f9b\u7684\u7d2b\u8272\u66f2\u7ebf\u88ab\u5b9a\u4e49\u4e3a <code>plannedTrajectory</code>\u3002C \u533a\u5728\u663e\u793a\u8f66\u8f86\u72b6\u6001\u65f6\uff0c\u5728 0 \u70b9\u7684\u53f3\u4fa7\uff0c\u540c\u6837\u662f\u663e\u793a\u6570\u636e\u5e93\u4e2d\u8bb0\u5f55\u7684\u8f66\u8f86\u7684\u901f\u5ea6\u548c\u52a0\u901f\u5ea6\u3002</p>"},{"location":"zh/GettingStarted/replayAndIreplay/#_3","title":"\u793a\u4f8b\u5206\u6790","text":"<p>\u4eff\u771f\u56de\u653e\u7684\u793a\u4f8b\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>rmodel = ReplayModel(dataBase = 'egoTrackingTest.db')\nwhile not rmodel.tpEnd:\nrmodel.moveStep() # (1)\nrmodel.gui.destroy()\n</code></pre> <ol> <li> \u8fd9\u91cc\u7531\u4e8e\u4e0d\u9700\u8981\u4e0e SUMO \u4ea4\u6362\u6570\u636e\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8fd0\u884c <code>rmodel.moveStep()</code> \u5373\u53ef\u3002</li> </ol> <p>\u4eff\u771f\u56de\u653e\u7684\u521d\u59cb\u5316\u53ea\u9700\u8981\u6307\u5b9a\u6570\u636e\u5e93\uff0c\u4e14\u4e0d\u9700\u8981\u540c\u5916\u90e8\u8fdb\u884c\u4ea4\u4e92\uff0c\u56e0\u6b64\u8be5\u793a\u4f8b\u7684\u4ee3\u7801\u76f8\u5bf9\u7b80\u5355\u3002</p>"},{"location":"zh/GettingStarted/replayAndIreplay/#_4","title":"\u4ea4\u4e92\u5f0f\u56de\u653e","text":"<p>\u5728\u81ea\u52a8\u9a7e\u9a76\u6d4b\u8bd5\u4eff\u771f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u90e8\u5206\u5371\u9669\u573a\u666f\u548c\u5931\u8d25\u573a\u666f\uff0c\u8fd9\u4e9b\u573a\u666f\u662f\u81ea\u52a8\u9a7e\u9a76\u6d4b\u8bd5\u5347\u7ea7\u7684\u91cd\u8981\u6570\u636e\u6765\u6e90\u3002\u56e0\u6b64\uff0c\u5728\u5371\u9669\u573a\u666f\u4e0a\u8fdb\u884c\u91cd\u65b0\u6d4b\u8bd5\u662f\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u529f\u80fd\u3002\u7136\u800c\uff0c\u5982\u679c\u4ec5\u5bf9 Ego \u8fdb\u884c\u91cd\u65b0\u63a7\u5236\uff0c\u5468\u56f4\u7684\u8f66\u8f86\u4e0d\u5bf9 Ego \u7684\u884c\u4e3a\u505a\u51fa\u54cd\u5e94\uff0c\u6d4b\u8bd5\u5c31\u5931\u53bb\u4e86\u672c\u8eab\u7684\u610f\u4e49\u3002\u56e0\u6b64\uff0cLimSim \u63d0\u4f9b\u4e86\u4ea4\u4e92\u5f0f\u56de\u653e\u7684\u529f\u80fd\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u5728\u5371\u9669\u573a\u666f\u4e2d\u8fed\u4ee3\u7b97\u6cd5\u3002</p> <p></p> <p>\u4ea4\u4e92\u5f0f\u4eff\u771f\u9700\u8981\u4e3a\u573a\u666f\u4e2d\u7684\u8f66\u8f86\u89c4\u5212\u65b0\u7684\u8f68\u8ff9\uff0c\u4e5f\u5c31\u9700\u8981\u5904\u7406\u65b0\u65e7\u8f68\u8ff9\u4e4b\u95f4\u7684\u51b2\u7a81\u3002\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e24\u8f66\u6309\u7167\u539f\u59cb\u8f68\u8ff9\u884c\u9a76\u662f\u6ca1\u6709\u51b2\u7a81\u7684\uff0c\u4f46\u662f\u5f53 ego \u6539\u53d8\u8f68\u8ff9\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u80fd\u4e0e\u5176\u4ed6\u8f66\u8f86\u53d1\u751f\u78b0\u649e\u3002\u8fd9\u65f6\uff0c\u5176\u4ed6\u8f66\u8f86\u9700\u8981\u505a\u51fa\u54cd\u5e94\u6765\u907f\u514d\u78b0\u649e\uff0c\u4e5f\u5c31\u662f\u6309\u7167\u56fe\u4e2d\u7d2b\u8272\u7684\u8f68\u8ff9\u6765\u884c\u9a76\u3002\u7136\u800c\uff0c\u5f53ego \u8fdc\u79bb\u4e86\u8fd9\u4e2a\u573a\u666f\uff0c\u521a\u624d\u88ab\u63a7\u5236\u7684\u8f66\u8f86\u5c31\u9762\u4e34\u4e00\u4e2a\u95ee\u9898\u2014\u2014\u662f\u5426\u56de\u5230\u539f\u8f68\u8ff9\u4e0a\u3002\u5982\u679c\u56de\u5230\u539f\u8f68\u8ff9\u4e0a\uff0c\u5c31\u4f1a\u4ea7\u751f\u4f4d\u7f6e\u7684\u7a81\u53d8\uff0c\u53ef\u80fd\u5bfc\u81f4\u65b0\u7684\u51b2\u7a81\uff0c\u5982\u679c\u4e0d\u56de\u5230\u539f\u8f68\u8ff9\u4e0a\uff0c\u5219\u8f66\u8f86\u540e\u7eed\u7684\u8f68\u8ff9\u5c31\u6ca1\u6709\u4e86\u53ea\u80fd\u505c\u5728\u539f\u5730\u6216\u6d88\u5931\u3002</p> <p>LimSim \u5c06\u4e0a\u8ff0\u95ee\u9898\u62c6\u6210\u4e09\u4e2a\u5b50\u95ee\u9898\u6765\u89e3\u51b3\uff1a1. \u4f55\u65f6\u4e3a\u8f66\u8f86\u89c4\u5212\u65b0\u7684\u8f68\u8ff9\uff1b2. \u89c4\u5212\u8f68\u8ff9\u8981\u6301\u7eed\u591a\u4e45\uff1b3. \u8f68\u8ff9\u89c4\u5212\u7ed3\u675f\u540e\uff0c\u5982\u4f55\u5904\u7406\u8fd9\u8f86\u8f66\u3002</p> <p>\u7b2c\u4e00\uff0c\u4e3a\u8f66\u8f86\u89c4\u5212\u65b0\u7684\u8f68\u8ff9\u5e76\u4e0d\u662f\u8d8a\u65e9\u8d8a\u597d\uff0c\u5982\u679c\u8f66\u8f86\u521a\u751f\u6210\u5c31\u4e3a\u5176\u89c4\u5212\u65b0\u7684\u8f68\u8ff9\uff0c\u90a3\u5bf9\u6570\u636e\u7684\u5229\u7528\u7a0b\u5ea6\u592a\u4f4e\uff0c\u4ec5\u4ec5\u7528\u5230\u4e86\u8f66\u8f86\u751f\u6210\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64 LimSim \u4f7f\u7528\u78b0\u649e\u68c0\u6d4b\u6765\u5224\u65ad\u662f\u5426\u9700\u8981\u4e3a\u8f66\u8f86\u89c4\u5212\u65b0\u7684\u8f68\u8ff9\u3002\u5982\u679c\u8f66\u8f86\u7684\u539f\u59cb\u8f68\u8ff9\u4e0e\u5176\u4ed6\u8f66\u8f86\u7684\u65b0\u8f68\u8ff9\u51b2\u7a81\uff08\u8f66\u8f86\u9996\u5148\u8981\u5728 AoI \u5185\uff09\uff0c\u5219\u9700\u8981\u4e3a\u8f66\u8f86\u91cd\u65b0\u89c4\u5212\u8f68\u8ff9\uff0c\u5426\u5219\u5c31\u7ef4\u6301\u539f\u8f68\u8ff9\u884c\u9a76\u3002</p> <p>\u7b2c\u4e8c\uff0c\u524d\u6587\u63d0\u5230\u8f66\u8f86\u8131\u79bb\u63a7\u5236\u540e\u8981\u4e48\u8df3\u56de\u539f\u8f68\u8ff9\uff0c\u8981\u4e48\u505c\u5728\u539f\u5730\u6216\u6d88\u5931\u3002\u8fd9\u4e24\u79cd\u5f62\u5f0f\u663e\u7136\u90fd\u4f1a\u5927\u5927\u964d\u4f4e\u4eff\u771f\u7684\u8fde\u8d2f\u6027\u548c\u6709\u6548\u6027\u3002\u56e0\u6b64 LimSim \u4f1a\u5224\u65ad\u8131\u79bb\u63a7\u5236\u7684\u8f66\u8f86\u662f\u5426\u8fd8\u5728 AoI \u5185\uff0c\u5982\u679c\u8f66\u8f86\u4ecd\u5728 AoI \u5185\uff0c\u5373\u4f7f\u4e0d\u518d\u51b2\u7a81\uff0cLimSim \u4f9d\u7136\u4f1a\u7ee7\u7eed\u4e3a\u5176\u89c4\u5212\u8f68\u8ff9\uff0c\u76f4\u5230\u5176\u79bb\u5f00 AoI\u3002\u8fd9\u6837\u505a\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1 AoI \u5185\u7684\u573a\u666f\u662f\u8fde\u8d2f\u7684\uff0c\u800c\u5728 AoI \u5916\u7684\u8f66\u8f86\u5219\u5bf9 ego \u7684\u5f71\u54cd\u8f83\u5c0f\u3002</p> <p>\u7b2c\u4e09\uff0c\u5f53\u8f66\u8f86\u4e0d\u518d\u9700\u8981\u4ea4\u4e92\uff0c\u4e14\u79bb\u5f00\u4e86 AoI\uff0c\u5219\u63a7\u5236\u9636\u6bb5\u7ed3\u675f\u3002\u8fd9\u65f6\u5982\u679c\u8ba9\u8f66\u8f86\u56de\u5230\u539f\u8f68\u8ff9\uff0c\u5219\u53ef\u80fd\u4e0e\u5176\u4ed6\u8f66\u8f86\u53d1\u751f\u78b0\u649e\uff0c\u56e0\u6b64 LimSim \u9009\u62e9\u76f4\u63a5\u9500\u6bc1\u8fd9\u8f86\u8f66\u3002\u5982\u679c\u6570\u636e\u96c6\u4e2d\u8fd8\u6709\u8fd9\u8f86\u8f66\u7684\u5269\u4f59\u8f68\u8ff9\uff0c\u5219\u4f1a\u5728\u5bf9\u5e94\u7684\u65f6\u523b\u91cd\u65b0\u751f\u6210\u8fd9\u8f86\u8f66\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cLimSim \u5728\u751f\u6210\u8f66\u8f86\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u5224\u65ad\u8be5\u8f66\u662f\u5426\u4f1a\u4e0e\u8def\u7f51\u4e2d\u73b0\u6709\u7684\u8f66\u8f86\u4ea7\u751f\u51b2\u7a81\uff0c\u5982\u679c\u4e0d\u51b2\u7a81\u5219\u751f\u6210\u8f66\u8f86\uff0c\u53cd\u4e4b\uff0c\u5219\u5ef6\u8fdf\u5230\u4e0b\u4e00\u4e2a\u65f6\u523b\u518d\u751f\u6210\u3002</p> <p>\u78b0\u649e\u68c0\u6d4b</p> <p>\u4e00\u822c\u7684\u78b0\u649e\u68c0\u6d4b\u7b97\u6cd5\u4f1a\u4f7f\u7528\u5206\u79bb\u8f74\u5b9a\u7406\u5224\u65ad\u4e24\u4e2a\u77e9\u5f62\u662f\u5426\u76f8\u4ea4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5224\u65ad\u67d0\u4e2a\u65f6\u523b\u4e24\u8f66\u662f\u5426\u76f8\u649e\u3002\u4f46\u662f\u5728\u4eff\u771f\u4e2d\uff0c\u6211\u4eec\u8981\u4e3a\u8f66\u8f86\u7559\u51fa\u8db3\u591f\u7684\u53cd\u5e94\u65f6\u95f4\u3002\u6bd4\u5982 A \u8f66\u751f\u6210\u65f6\uff0c\u524d\u65b9 3 \u7c73\u5904\u6709\u4e00\u8f86 B \u8f66\u5728\u884c\u9a76\uff0c\u5373\u4f7f\u8fd9\u4e2a\u65f6\u523b\u4e24\u8f66\u4e0d\u76f8\u649e\uff0c\u672a\u6765\u51e0\u79d2\u5185\u4e24\u8f66\u8fd8\u662f\u6709\u5f88\u5927\u7684\u53ef\u80fd\u6027\u51b2\u7a81\u3002\u56e0\u6b64\uff0cLimSim \u4f1a\u4f7f\u7528\u8f66\u8f86\u672a\u6765\u7684\u8f68\u8ff9\uff08<code>dbTrajectory</code> \u6216 <code>plannedTrajectory</code>\uff09\u6765\u8fdb\u884c\u78b0\u649e\u68c0\u6d4b\uff0c\u4ee5\u907f\u514d\u6f5c\u5728\u7684\u51b2\u7a81\u3002</p>"},{"location":"zh/GettingStarted/replayAndIreplay/#_5","title":"\u4eff\u771f\u793a\u4f8b","text":"<p>\u4ecb\u7ecd\u4e86\u5b9e\u73b0\u65b9\u6cd5\u4e4b\u540e\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u6307\u4ee4\uff0c\u53ef\u4ee5\u8fd0\u884c\u4ea4\u4e92\u5f0f\u4eff\u771f\u7684\u793a\u4f8b\uff1a</p> <pre><code>python InterReplayExample.py\n</code></pre> <p>\u5982\u679c\u4e0a\u8ff0\u6307\u4ee4\u8fd0\u884c\u6b63\u5e38\uff0c\u5219\u540c\u6837\u4f1a\u8c03\u51fa\u56fe\u5f62\u754c\u9762\u3002\u56fe\u5f62\u754c\u9762\u7684\u6574\u4f53\u7ed3\u6784\u4e0e\u5b9e\u65f6\u4eff\u771f\u4e00\u81f4\uff0c\u4ec5\u5728 B \u533a\u6709\u4e9b\u8bb8\u4e0d\u540c\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8f66\u8f86\u524d\u9762\u7684\u66f2\u7ebf\u6709\u7c89\u7ea2\u8272\u548c\u7d2b\u8272\u4e24\u79cd\uff0c\u5206\u522b\u5bf9\u5e94\u524d\u6587\u63d0\u53ca\u7684 <code>dbTrajectory</code> \u548c <code>plannedTrajectory</code>\u3002\u8f66\u8f86\u5982\u679c\u6309\u7167\u6570\u636e\u5e93\u4e2d\u7684\u8f68\u8ff9\u884c\u9a76\uff0c\u5219\u663e\u793a <code>dbTrajectory</code>\uff0c\u5982\u679c\u53d7\u5230\u51b3\u7b56\u89c4\u5212\u7b97\u6cd5\u7684\u63a7\u5236\uff0c\u5219\u663e\u793a <code>plannedTrajectory</code>\u3002</p> <p></p> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>from trafficManager.traffic_manager import TrafficManager\nfrom simModel.egoTracking import interReplay\nirmodel = interReplay.InterReplayModel(\ndataBase='egoTrackingTest.db', \nstartFrame=4000\n)\nplanner = TrafficManager(irmodel)\nwhile not irmodel.tpEnd:\nirmodel.moveStep()\nif irmodel.timeStep % 5 == 0:\nroadgraph, vehicles = irmodel.exportSce()\nif roadgraph:\ntrajectories = planner.plan(\nirmodel.timeStep * 0.1, \nroadgraph, vehicles\n)\nelse:\ntrajectories = {} # (1)\nirmodel.setTrajectories(trajectories)\nelse:\nirmodel.setTrajectories({})\nirmodel.gui.destroy()\n</code></pre> <ol> <li>  \u8fd0\u884c\u4ea4\u4e92\u5f0f\u56de\u653e\u65f6\uff0c<code>irmodel.setTrajectories()</code> \u51fd\u6570\u662f\u5fc5\u987b\u7684\uff0c\u5373\u4f7f\u6ca1\u6709\u89c4\u5212\u8f68\u8ff9\uff0c\u4e5f\u9700\u8981\u4f20\u5165\u7a7a\u7684\u5b57\u5178\u3002</li> </ol> <p>\u793a\u4f8b\u4ee3\u7801\u6574\u4f53\u4e0e\u5b9e\u65f6\u4eff\u771f\u5dee\u522b\u4e0d\u5927\uff0c\u5c06\u8def\u7f51\u6587\u4ef6\u548c\u8def\u5f84\u6587\u4ef6\u66ff\u6362\u4e3a\u5bf9\u5e94\u7684\u6570\u636e\u5e93\u5373\u53ef\u3002</p>"}]}